{"version":3,"sources":["webpack:////home/elliott/playground/test/theia/packages/filesystem/src/browser/download/file-download-command-contribution.ts","webpack:////home/elliott/playground/test/theia/packages/filesystem/src/browser/download/file-download-service.ts"],"names":[],"mappings":"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","file":"9.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { isChrome } from '@theia/core/lib/browser/browser';\nimport { environment } from '@theia/application-package/lib/environment';\nimport { SelectionService } from '@theia/core/lib/common/selection-service';\nimport { Command, CommandContribution, CommandRegistry } from '@theia/core/lib/common/command';\nimport { UriAwareCommandHandler } from '@theia/core/lib/common/uri-command-handler';\nimport { FileDownloadService } from './file-download-service';\n\n@injectable()\nexport class FileDownloadCommandContribution implements CommandContribution {\n\n    @inject(FileDownloadService)\n    protected readonly downloadService: FileDownloadService;\n\n    @inject(SelectionService)\n    protected readonly selectionService: SelectionService;\n\n    registerCommands(registry: CommandRegistry): void {\n        registry.registerCommand(\n            FileDownloadCommands.DOWNLOAD,\n            new UriAwareCommandHandler<URI[]>(this.selectionService, {\n                execute: uris => this.executeDownload(uris),\n                isEnabled: uris => this.isDownloadEnabled(uris),\n                isVisible: uris => this.isDownloadVisible(uris),\n            }, { multi: true })\n        );\n        registry.registerCommand(\n            FileDownloadCommands.COPY_DOWNLOAD_LINK,\n            new UriAwareCommandHandler<URI[]>(this.selectionService, {\n                execute: uris => this.executeDownload(uris, { copyLink: true }),\n                isEnabled: uris => isChrome && this.isDownloadEnabled(uris),\n                isVisible: uris => isChrome && this.isDownloadVisible(uris),\n            }, { multi: true })\n        );\n    }\n\n    protected async executeDownload(uris: URI[], options?: { copyLink?: boolean }): Promise<void> {\n        this.downloadService.download(uris, options);\n    }\n\n    protected isDownloadEnabled(uris: URI[]): boolean {\n        return !environment.electron.is() && uris.length > 0 && uris.every(u => u.scheme === 'file');\n    }\n\n    protected isDownloadVisible(uris: URI[]): boolean {\n        return this.isDownloadEnabled(uris);\n    }\n\n}\n\nexport namespace FileDownloadCommands {\n\n    export const DOWNLOAD: Command = {\n        id: 'file.download',\n        category: 'File',\n        label: 'Download'\n    };\n\n    export const COPY_DOWNLOAD_LINK: Command = {\n        id: 'file.copyDownloadLink',\n        category: 'File',\n        label: 'Copy Download Link'\n    };\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { ILogger } from '@theia/core/lib/common/logger';\n// import { Endpoint } from '@theia/core/lib/browser/endpoint';\nimport { FileSystem } from '../../common/filesystem';\nimport { S3StorageSystem } from '../s3storagesystem';\n// import { FileDownloadData } from '../../common/download/file-download-data';\nimport { MessageService } from '@theia/core/lib/common/message-service';\nimport { addClipboardListener } from '@theia/core/lib/browser/widgets';\n\n@injectable()\nexport class FileDownloadService {\n\n    protected anchor: HTMLAnchorElement | undefined;\n    protected downloadCounter: number = 0;\n\n    @inject(ILogger)\n    protected readonly logger: ILogger;\n\n    @inject(FileSystem)\n    protected readonly fileSystem: FileSystem;\n\n    @inject(MessageService)\n    protected readonly messageService: MessageService;\n\n    @inject(S3StorageSystem)\n    protected readonly s3fs: S3StorageSystem;\n\n    protected handleCopy(event: ClipboardEvent, downloadUrl: string): void {\n        if (downloadUrl && event.clipboardData) {\n            event.clipboardData.setData('text/plain', downloadUrl);\n            event.preventDefault();\n            this.messageService.info('Copied the download link to the clipboard. The link is valid for 60 seconds.');\n        }\n    }\n\n    async download(uris: URI[], options?: FileDownloadService.DownloadOptions): Promise<void> {\n        console.log(uris);\n        let cancel = false;\n        if (uris.length === 0) {\n            return;\n        }\n        if (uris.length > 1) {\n            await this.messageService.warn('Please download a file/directory at a time. Tip: to download the whole project, \\\n             deselect any files first and retry the download command');\n            return;\n        }\n        const copyLink = options && options.copyLink ? true : false;\n        try {\n            const progress = await this.messageService.showProgress({\n                text: `Preparing download${copyLink ? ' link' : ''}...`, options: { cancelable: true }\n            }, () => { cancel = true; });\n\n            const key = uris[0].toString().substr(7);\n            const s3obj = await this.s3fs.stat(key);\n            if (!s3obj) {\n                progress.cancel();\n                await this.messageService.error(`File ${key} does not exists`);\n                return;\n            }\n            let content: Uint8Array;\n            if (s3obj.isDir) {\n                content = await this.s3fs.zipDir(key);\n            } else {\n                content = <Uint8Array>(await this.s3fs.readFile(key));\n            }\n            progress.cancel();\n            if (cancel) {\n                return;\n            }\n            const tempBlob = new Blob([content], {type: 'application/octet-stream'});\n            const downloadUrl = URL.createObjectURL(tempBlob);\n\n            if (copyLink) {\n                setTimeout(() => {\n                /* Release it in a minute */\n                    URL.revokeObjectURL(downloadUrl);\n                }, 60000);\n                if (document.documentElement) {\n                    const toDispose = addClipboardListener(document.documentElement, 'copy', e => {\n                        toDispose.dispose();\n                        this.handleCopy(e, downloadUrl);\n                    });\n                    document.execCommand('copy');\n                }\n            } else {\n                let displayName = uris[0].displayName;\n                if (s3obj.isDir) {\n                    if (displayName === '' || displayName === '/') {\n                        displayName = 'root';\n                    }\n                    displayName += '.zip';\n                }\n                this.forceDownload(downloadUrl, displayName);\n            }\n        } catch (e) {\n            this.logger.error(`Error occurred when downloading: ${uris.map(u => u.toString(true))}.`, e);\n        }\n    }\n\n    protected async forceDownload(blob_url: string, title: string): Promise<void> {\n        try {\n            if (this.anchor === undefined) {\n                this.anchor = document.createElement('a');\n            }\n            this.anchor.href = blob_url;\n            this.anchor.style.display = 'none';\n            this.anchor.download = title;\n            document.body.appendChild(this.anchor);\n            this.anchor.click();\n        } finally {\n            // make sure anchor is removed from parent\n            if (this.anchor && this.anchor.parentNode) {\n                this.anchor.parentNode.removeChild(this.anchor);\n            }\n            URL.revokeObjectURL(blob_url);\n        }\n    }\n}\n\nexport namespace FileDownloadService {\n    export interface DownloadOptions {\n        /**\n         * `true` if the download link has to be copied to the clipboard. This will not trigger the actual download. Defaults to `false`.\n         */\n        readonly copyLink?: boolean;\n    }\n}\n"],"sourceRoot":""}