{"version":3,"sources":["webpack:////home/elliott/playground/test/theia/node_modules/moment/locale sync ^\\.\\/.*$","webpack:////home/elliott/playground/test/theia/packages/filesystem/src/browser/file-dialog/file-dialog-container.ts","webpack:////home/elliott/playground/test/theia/packages/filesystem/src/browser/file-dialog/index.ts","webpack:////home/elliott/playground/test/theia/packages/filesystem/src/browser/index.ts","webpack:////home/elliott/playground/test/theia/packages/variable-resolver/src/browser/index.ts","webpack:////home/elliott/playground/test/theia/packages/workspace/src/browser/diff-service.ts","webpack:////home/elliott/playground/test/theia/packages/workspace/src/browser/quick-open-workspace.ts","webpack:////home/elliott/playground/test/theia/packages/workspace/src/browser/workspace-commands.ts","webpack:////home/elliott/playground/test/theia/packages/workspace/src/browser/workspace-compare-handler.ts","webpack:////home/elliott/playground/test/theia/packages/workspace/src/browser/workspace-delete-handler.ts","webpack:////home/elliott/playground/test/theia/packages/workspace/src/browser/workspace-dummy-server.ts","webpack:////home/elliott/playground/test/theia/packages/workspace/src/browser/workspace-duplicate-handler.ts","webpack:////home/elliott/playground/test/theia/packages/workspace/src/browser/workspace-frontend-contribution.ts","webpack:////home/elliott/playground/test/theia/packages/workspace/src/browser/workspace-frontend-module.ts","webpack:////home/elliott/playground/test/theia/packages/workspace/src/browser/workspace-input-dialog.ts","webpack:////home/elliott/playground/test/theia/packages/workspace/src/browser/workspace-preferences.ts","webpack:////home/elliott/playground/test/theia/packages/workspace/src/browser/workspace-service.ts","webpack:////home/elliott/playground/test/theia/packages/workspace/src/browser/workspace-storage-service.ts","webpack:////home/elliott/playground/test/theia/packages/workspace/src/browser/workspace-uri-contribution.ts","webpack:////home/elliott/playground/test/theia/packages/workspace/src/browser/workspace-utils.ts","webpack:////home/elliott/playground/test/theia/packages/workspace/src/browser/workspace-variable-contribution.ts","webpack:////home/elliott/playground/test/theia/packages/workspace/src/common/index.ts","webpack:////home/elliott/playground/test/theia/packages/workspace/src/common/utils.ts","webpack:////home/elliott/playground/test/theia/packages/workspace/src/common/workspace-protocol.ts"],"names":[],"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","file":"11.bundle.js","sourcesContent":["var map = {\n\t\"./af\": \"../../node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"../../node_modules/moment/locale/af.js\",\n\t\"./ar\": \"../../node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"../../node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"../../node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"../../node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"../../node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"../../node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"../../node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"../../node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"../../node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"../../node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"../../node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"../../node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"../../node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"../../node_modules/moment/locale/ar.js\",\n\t\"./az\": \"../../node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"../../node_modules/moment/locale/az.js\",\n\t\"./be\": \"../../node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"../../node_modules/moment/locale/be.js\",\n\t\"./bg\": \"../../node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"../../node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"../../node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"../../node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"../../node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"../../node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"../../node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"../../node_modules/moment/locale/bo.js\",\n\t\"./br\": \"../../node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"../../node_modules/moment/locale/br.js\",\n\t\"./bs\": \"../../node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"../../node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"../../node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"../../node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"../../node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"../../node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"../../node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"../../node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"../../node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"../../node_modules/moment/locale/cy.js\",\n\t\"./da\": \"../../node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"../../node_modules/moment/locale/da.js\",\n\t\"./de\": \"../../node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"../../node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"../../node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"../../node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"../../node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"../../node_modules/moment/locale/de.js\",\n\t\"./dv\": \"../../node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"../../node_modules/moment/locale/dv.js\",\n\t\"./el\": \"../../node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"../../node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"../../node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"../../node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"../../node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"../../node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"../../node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"../../node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"../../node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"../../node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"../../node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"../../node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"../../node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"../../node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"../../node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"../../node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"../../node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"../../node_modules/moment/locale/eo.js\",\n\t\"./es\": \"../../node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"../../node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"../../node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"../../node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"../../node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"../../node_modules/moment/locale/es.js\",\n\t\"./et\": \"../../node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"../../node_modules/moment/locale/et.js\",\n\t\"./eu\": \"../../node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"../../node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"../../node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"../../node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"../../node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"../../node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"../../node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"../../node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"../../node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"../../node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"../../node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"../../node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"../../node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"../../node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"../../node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"../../node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"../../node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"../../node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"../../node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"../../node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"../../node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"../../node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"../../node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"../../node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"../../node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"../../node_modules/moment/locale/gu.js\",\n\t\"./he\": \"../../node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"../../node_modules/moment/locale/he.js\",\n\t\"./hi\": \"../../node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"../../node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"../../node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"../../node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"../../node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"../../node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"../../node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"../../node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"../../node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"../../node_modules/moment/locale/id.js\",\n\t\"./is\": \"../../node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"../../node_modules/moment/locale/is.js\",\n\t\"./it\": \"../../node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"../../node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"../../node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"../../node_modules/moment/locale/it.js\",\n\t\"./ja\": \"../../node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"../../node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"../../node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"../../node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"../../node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"../../node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"../../node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"../../node_modules/moment/locale/kk.js\",\n\t\"./km\": \"../../node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"../../node_modules/moment/locale/km.js\",\n\t\"./kn\": \"../../node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"../../node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"../../node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"../../node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"../../node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"../../node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"../../node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"../../node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"../../node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"../../node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"../../node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"../../node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"../../node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"../../node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"../../node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"../../node_modules/moment/locale/lv.js\",\n\t\"./me\": \"../../node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"../../node_modules/moment/locale/me.js\",\n\t\"./mi\": \"../../node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"../../node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"../../node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"../../node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"../../node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"../../node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"../../node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"../../node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"../../node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"../../node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"../../node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"../../node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"../../node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"../../node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"../../node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"../../node_modules/moment/locale/mt.js\",\n\t\"./my\": \"../../node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"../../node_modules/moment/locale/my.js\",\n\t\"./nb\": \"../../node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"../../node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"../../node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"../../node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"../../node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"../../node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"../../node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"../../node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"../../node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"../../node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"../../node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"../../node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"../../node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"../../node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"../../node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"../../node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"../../node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"../../node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"../../node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"../../node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"../../node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"../../node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"../../node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"../../node_modules/moment/locale/sd.js\",\n\t\"./se\": \"../../node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"../../node_modules/moment/locale/se.js\",\n\t\"./si\": \"../../node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"../../node_modules/moment/locale/si.js\",\n\t\"./sk\": \"../../node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"../../node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"../../node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"../../node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"../../node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"../../node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"../../node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"../../node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"../../node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"../../node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"../../node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"../../node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"../../node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"../../node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"../../node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"../../node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"../../node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"../../node_modules/moment/locale/ta.js\",\n\t\"./te\": \"../../node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"../../node_modules/moment/locale/te.js\",\n\t\"./tet\": \"../../node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"../../node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"../../node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"../../node_modules/moment/locale/tg.js\",\n\t\"./th\": \"../../node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"../../node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"../../node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"../../node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"../../node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"../../node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"../../node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"../../node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"../../node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"../../node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"../../node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"../../node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"../../node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"../../node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"../../node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"../../node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"../../node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"../../node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"../../node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"../../node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"../../node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"../../node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"../../node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"../../node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"../../node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"../../node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"../../node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"../../node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"../../node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"../../node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"../../node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"../../node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"../../node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"../../node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"../../node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"../../node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"../../node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces, Container } from 'inversify';\nimport { Tree, TreeModel, TreeProps, defaultTreeProps } from '@theia/core/lib/browser';\nimport { createFileTreeContainer, FileTreeModel, FileTreeWidget } from '../file-tree';\nimport { OpenFileDialog, OpenFileDialogProps, SaveFileDialog, SaveFileDialogProps } from './file-dialog';\nimport { FileDialogModel } from './file-dialog-model';\nimport { FileDialogWidget } from './file-dialog-widget';\nimport { FileDialogTree } from './file-dialog-tree';\n\nexport function createFileDialogContainer(parent: interfaces.Container): Container {\n    const child = createFileTreeContainer(parent);\n\n    child.unbind(FileTreeModel);\n    child.bind(FileDialogModel).toSelf();\n    child.rebind(TreeModel).toService(FileDialogModel);\n\n    child.unbind(FileTreeWidget);\n    child.bind(FileDialogWidget).toSelf();\n\n    child.bind(FileDialogTree).toSelf();\n    child.rebind(Tree).toService(FileDialogTree);\n\n    return child;\n}\n\nexport function createOpenFileDialogContainer(parent: interfaces.Container, props: OpenFileDialogProps): Container {\n    const container = createFileDialogContainer(parent);\n    container.rebind(TreeProps).toConstantValue({\n        ...defaultTreeProps,\n        multiSelect: props.canSelectMany,\n        search: true\n    });\n\n    container.bind(OpenFileDialogProps).toConstantValue(props);\n    container.bind(OpenFileDialog).toSelf();\n\n    return container;\n}\n\nexport function createSaveFileDialogContainer(parent: interfaces.Container, props: SaveFileDialogProps): Container {\n    const container = createFileDialogContainer(parent);\n    container.rebind(TreeProps).toConstantValue({\n        ...defaultTreeProps,\n        multiSelect: false,\n        search: true\n    });\n\n    container.bind(SaveFileDialogProps).toConstantValue(props);\n    container.bind(SaveFileDialog).toSelf();\n\n    return container;\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './file-dialog';\nexport * from './file-dialog-container';\nexport * from './file-dialog-tree-filters-renderer';\nexport * from './file-dialog-service';\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './location';\nexport * from './file-tree';\nexport * from './file-dialog';\nexport * from './filesystem-preferences';\nexport * from './filesystem-watcher';\nexport * from './file-resource';\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './variable';\nexport * from './variable-quick-open-service';\nexport * from './variable-resolver-service';\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { DiffUris } from '@theia/core/lib/browser/diff-uris';\nimport { FileSystem } from '@theia/filesystem/lib/common/filesystem';\nimport { open, OpenerService, OpenerOptions } from '@theia/core/lib/browser';\nimport { MessageService } from '@theia/core/lib/common/message-service';\n\n@injectable()\nexport class DiffService {\n\n    @inject(FileSystem) protected readonly fileSystem: FileSystem;\n    @inject(OpenerService) protected readonly openerService: OpenerService;\n    @inject(MessageService) protected readonly messageService: MessageService;\n\n    public async openDiffEditor(left: URI, right: URI, label?: string, options?: OpenerOptions): Promise<void> {\n        if (left.scheme === 'file' && right.scheme === 'file') {\n            const [leftExists, rightExists] = await Promise.all([\n                this.fileSystem.exists(left.toString()),\n                this.fileSystem.exists(right.toString())\n            ]);\n            if (leftExists && rightExists) {\n                const [leftStat, rightStat] = await Promise.all([\n                    this.fileSystem.getFileStat(left.toString()),\n                    this.fileSystem.getFileStat(right.toString()),\n                ]);\n                if (leftStat && rightStat) {\n                    if (!leftStat.isDirectory && !rightStat.isDirectory) {\n                        const uri = DiffUris.encode(left, right, label);\n                        await open(this.openerService, uri, options);\n                    } else {\n                        const details = (() => {\n                            if (leftStat.isDirectory && rightStat.isDirectory) {\n                                return 'Both resource were a directory.';\n                            } else {\n                                if (leftStat.isDirectory) {\n                                    return `'${left.path.base}' was a directory.`;\n                                } else {\n                                    return `'${right.path.base}' was a directory.`;\n                                }\n                            }\n                        });\n                        this.messageService.warn(`Directories cannot be compared. ${details()}`);\n                    }\n                }\n            }\n        } else {\n            const uri = DiffUris.encode(left, right, label);\n            await open(this.openerService, uri, options);\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { QuickOpenService, QuickOpenModel, QuickOpenItem, QuickOpenGroupItem, QuickOpenMode, LabelProvider } from '@theia/core/lib/browser';\nimport { EnvVariablesServer } from '@theia/core/lib/common/env-variables';\nimport { WorkspaceService } from './workspace-service';\nimport { getTemporaryWorkspaceFileUri } from '../common';\nimport { WorkspacePreferences } from './workspace-preferences';\nimport URI from '@theia/core/lib/common/uri';\nimport { FileSystem, FileSystemUtils } from '@theia/filesystem/lib/common';\nimport * as moment from 'moment';\n\n@injectable()\nexport class QuickOpenWorkspace implements QuickOpenModel {\n\n    protected items: QuickOpenGroupItem[];\n    protected opened: boolean;\n\n    @inject(QuickOpenService) protected readonly quickOpenService: QuickOpenService;\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(FileSystem) protected readonly fileSystem: FileSystem;\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n    @inject(WorkspacePreferences) protected preferences: WorkspacePreferences;\n    @inject(EnvVariablesServer) protected readonly envServer: EnvVariablesServer;\n\n    async open(workspaces: string[]): Promise<void> {\n        this.items = [];\n        const [homeDirUri, tempWorkspaceFile] = await Promise.all([\n            this.fileSystem.getCurrentUserHome(),\n            getTemporaryWorkspaceFileUri(this.envServer)\n        ]);\n        const home = homeDirUri ? await this.fileSystem.getFsPath(homeDirUri.uri) : undefined;\n        await this.preferences.ready;\n        if (!workspaces.length) {\n            this.items.push(new QuickOpenGroupItem({\n                label: 'No Recent Workspaces',\n                run: (mode: QuickOpenMode): boolean => false\n            }));\n        }\n        for (const workspace of workspaces) {\n            const uri = new URI(workspace);\n            const stat = await this.fileSystem.getFileStat(workspace);\n            if (!stat ||\n                !this.preferences['workspace.supportMultiRootWorkspace'] && !stat.isDirectory) {\n                continue; // skip the workspace files if multi root is not supported\n            }\n            if (uri.toString() === tempWorkspaceFile.toString()) {\n                continue; // skip the temporary workspace files\n            }\n            const icon = this.labelProvider.getIcon(stat);\n            const iconClass = icon === '' ? undefined : icon + ' file-icon';\n            this.items.push(new QuickOpenGroupItem({\n                label: uri.path.base,\n                description: (home) ? FileSystemUtils.tildifyPath(uri.path.toString(), home) : uri.path.toString(),\n                groupLabel: `last modified ${moment(stat.lastModification).fromNow()}`,\n                iconClass,\n                run: (mode: QuickOpenMode): boolean => {\n                    if (mode !== QuickOpenMode.OPEN) {\n                        return false;\n                    }\n                    const current = this.workspaceService.workspace;\n                    const uriToOpen = new URI(workspace);\n                    if ((current && current.uri !== workspace) || !current) {\n                        this.workspaceService.open(uriToOpen);\n                    }\n                    return true;\n                },\n            }));\n        }\n\n        this.quickOpenService.open(this, {\n            placeholder: 'Type the name of the workspace you want to open',\n            fuzzyMatchLabel: true,\n            fuzzySort: false\n        });\n    }\n\n    onType(lookFor: string, acceptor: (items: QuickOpenItem[]) => void): void {\n        acceptor(this.items);\n    }\n\n    select(): void {\n        this.items = [];\n        this.opened = this.workspaceService.opened;\n        this.workspaceService.recentWorkspaces().then(workspaceRoots => {\n            if (workspaceRoots) {\n                this.open(workspaceRoots);\n            }\n        });\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { SelectionService } from '@theia/core/lib/common/selection-service';\nimport { Command, CommandContribution, CommandRegistry } from '@theia/core/lib/common/command';\nimport { MenuContribution, MenuModelRegistry } from '@theia/core/lib/common/menu';\nimport { CommonMenus } from '@theia/core/lib/browser/common-frontend-contribution';\nimport { FileSystem, FileStat } from '@theia/filesystem/lib/common/filesystem';\nimport { FileDialogService } from '@theia/filesystem/lib/browser';\nimport { SingleTextInputDialog, ConfirmDialog } from '@theia/core/lib/browser/dialogs';\nimport { OpenerService, OpenHandler, open, FrontendApplication, LabelProvider } from '@theia/core/lib/browser';\nimport { UriCommandHandler, UriAwareCommandHandler } from '@theia/core/lib/common/uri-command-handler';\nimport { WorkspaceService } from './workspace-service';\nimport { MessageService } from '@theia/core/lib/common/message-service';\nimport { WorkspacePreferences } from './workspace-preferences';\nimport { WorkspaceDeleteHandler } from './workspace-delete-handler';\nimport { WorkspaceDuplicateHandler } from './workspace-duplicate-handler';\nimport { FileSystemUtils } from '@theia/filesystem/lib/common';\nimport { WorkspaceCompareHandler } from './workspace-compare-handler';\nimport { FileDownloadCommands } from '@theia/filesystem/lib/browser/download/file-download-command-contribution';\nimport { FileSystemCommands } from '@theia/filesystem/lib/browser/filesystem-frontend-contribution';\nimport { WorkspaceInputDialog } from './workspace-input-dialog';\n\nconst validFilename: (arg: string) => boolean = require('valid-filename');\n\nexport namespace WorkspaceCommands {\n\n    const WORKSPACE_CATEGORY = 'Workspace';\n    const FILE_CATEGORY = 'File';\n\n    // On Linux and Windows, both files and folders cannot be opened at the same time in electron.\n    // `OPEN_FILE` and `OPEN_FOLDER` must be available only on Linux and Windows in electron.\n    // `OPEN` must *not* be available on Windows and Linux in electron.\n    // VS Code does the same. See: https://github.com/eclipse-theia/theia/pull/3202#issuecomment-430585357\n    export const OPEN: Command & { dialogLabel: string } = {\n        id: 'workspace:open',\n        category: FILE_CATEGORY,\n        label: 'Open...',\n        dialogLabel: 'Open'\n    };\n    // No `label`. Otherwise, it shows up in the `Command Palette`.\n    export const OPEN_FILE: Command & { dialogLabel: string } = {\n        id: 'workspace:openFile',\n        category: FILE_CATEGORY,\n        dialogLabel: 'Open File'\n    };\n    export const OPEN_FOLDER: Command & { dialogLabel: string } = {\n        id: 'workspace:openFolder',\n        dialogLabel: 'Open Folder' // No `label`. Otherwise, it shows up in the `Command Palette`.\n    };\n    export const OPEN_WORKSPACE: Command & { dialogLabel: string } = {\n        id: 'workspace:openWorkspace',\n        category: FILE_CATEGORY,\n        label: 'Open Workspace...',\n        dialogLabel: 'Open Workspace'\n    };\n    export const OPEN_RECENT_WORKSPACE: Command = {\n        id: 'workspace:openRecent',\n        category: FILE_CATEGORY,\n        label: 'Open Recent Workspace...'\n    };\n    export const CLOSE: Command = {\n        id: 'workspace:close',\n        category: WORKSPACE_CATEGORY,\n        label: 'Close Workspace'\n    };\n    export const NEW_FILE: Command = {\n        id: 'file.newFile',\n        category: FILE_CATEGORY,\n        label: 'New File'\n    };\n    export const NEW_FOLDER: Command = {\n        id: 'file.newFolder',\n        category: FILE_CATEGORY,\n        label: 'New Folder'\n    };\n    export const FILE_OPEN_WITH = (opener: OpenHandler): Command => ({\n        id: `file.openWith.${opener.id}`\n    });\n    export const FILE_RENAME: Command = {\n        id: 'file.rename',\n        category: FILE_CATEGORY,\n        label: 'Rename'\n    };\n    export const FILE_DELETE: Command = {\n        id: 'file.delete',\n        category: FILE_CATEGORY,\n        label: 'Delete'\n    };\n    export const FILE_DUPLICATE: Command = {\n        id: 'file.duplicate',\n        category: FILE_CATEGORY,\n        label: 'Duplicate'\n    };\n    export const FILE_COMPARE: Command = {\n        id: 'file.compare',\n        category: FILE_CATEGORY,\n        label: 'Compare with Each Other'\n    };\n    export const ADD_FOLDER: Command = {\n        id: 'workspace:addFolder',\n        category: WORKSPACE_CATEGORY,\n        label: 'Add Folder to Workspace...'\n    };\n    export const REMOVE_FOLDER: Command = {\n        id: 'workspace:removeFolder',\n        category: WORKSPACE_CATEGORY,\n        label: 'Remove Folder from Workspace'\n    };\n    export const SAVE_WORKSPACE_AS: Command = {\n        id: 'workspace:saveAs',\n        category: WORKSPACE_CATEGORY,\n        label: 'Save Workspace As...'\n    };\n    export const SAVE_AS: Command = {\n        id: 'file.saveAs',\n        category: 'File',\n        label: 'Save As...',\n    };\n}\n\n@injectable()\nexport class FileMenuContribution implements MenuContribution {\n\n    registerMenus(registry: MenuModelRegistry): void {\n        registry.registerMenuAction(CommonMenus.FILE_NEW, {\n            commandId: WorkspaceCommands.NEW_FILE.id\n        });\n        registry.registerMenuAction(CommonMenus.FILE_NEW, {\n            commandId: WorkspaceCommands.NEW_FOLDER.id\n        });\n        const downloadUploadMenu = [...CommonMenus.FILE, '4_downloadupload'];\n        registry.registerMenuAction(downloadUploadMenu, {\n            commandId: FileSystemCommands.UPLOAD.id,\n            order: 'a'\n        });\n        registry.registerMenuAction(downloadUploadMenu, {\n            commandId: FileDownloadCommands.DOWNLOAD.id,\n            order: 'b'\n        });\n    }\n\n}\n\n@injectable()\nexport class EditMenuContribution implements MenuContribution {\n\n    registerMenus(registry: MenuModelRegistry): void {\n        registry.registerMenuAction(CommonMenus.EDIT_CLIPBOARD, {\n            commandId: FileDownloadCommands.COPY_DOWNLOAD_LINK.id,\n            order: '9999'\n        });\n    }\n\n}\n\n@injectable()\nexport class WorkspaceCommandContribution implements CommandContribution {\n\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n    @inject(FileSystem) protected readonly fileSystem: FileSystem;\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(SelectionService) protected readonly selectionService: SelectionService;\n    @inject(OpenerService) protected readonly openerService: OpenerService;\n    @inject(FrontendApplication) protected readonly app: FrontendApplication;\n    @inject(MessageService) protected readonly messageService: MessageService;\n    @inject(WorkspacePreferences) protected readonly preferences: WorkspacePreferences;\n    @inject(FileDialogService) protected readonly fileDialogService: FileDialogService;\n    @inject(WorkspaceDeleteHandler) protected readonly deleteHandler: WorkspaceDeleteHandler;\n    @inject(WorkspaceDuplicateHandler) protected readonly duplicateHandler: WorkspaceDuplicateHandler;\n    @inject(WorkspaceCompareHandler) protected readonly compareHandler: WorkspaceCompareHandler;\n\n    registerCommands(registry: CommandRegistry): void {\n        this.openerService.getOpeners().then(openers => {\n            for (const opener of openers) {\n                const openWithCommand = WorkspaceCommands.FILE_OPEN_WITH(opener);\n                registry.registerCommand(openWithCommand, this.newUriAwareCommandHandler({\n                    execute: uri => opener.open(uri),\n                    isEnabled: uri => opener.canHandle(uri) > 0,\n                    isVisible: uri => opener.canHandle(uri) > 0 && this.areMultipleOpenHandlersPresent(openers, uri)\n                }));\n            }\n        });\n        registry.registerCommand(WorkspaceCommands.NEW_FILE, this.newWorkspaceRootUriAwareCommandHandler({\n            execute: uri => this.getDirectory(uri).then(parent => {\n                if (parent) {\n                    const parentUri = new URI(parent.uri);\n                    const { fileName, fileExtension } = this.getDefaultFileConfig();\n                    const vacantChildUri = FileSystemUtils.generateUniqueResourceURI(parentUri, parent, fileName, fileExtension);\n\n                    const dialog = new WorkspaceInputDialog({\n                        title: 'New File',\n                        parentUri: parentUri,\n                        initialValue: vacantChildUri.path.base,\n                        validate: name => this.validateFileName(name, parent, true)\n                    }, this.labelProvider);\n\n                    dialog.open().then(name => {\n                        if (name) {\n                            const fileUri = parentUri.resolve(name);\n                            this.fileSystem.createFile(fileUri.toString()).then(() => {\n                                open(this.openerService, fileUri);\n                            });\n                        }\n                    });\n                }\n            })\n        }));\n        registry.registerCommand(WorkspaceCommands.NEW_FOLDER, this.newWorkspaceRootUriAwareCommandHandler({\n            execute: uri => this.getDirectory(uri).then(parent => {\n                if (parent) {\n                    const parentUri = new URI(parent.uri);\n                    const vacantChildUri = FileSystemUtils.generateUniqueResourceURI(parentUri, parent, 'Untitled');\n                    const dialog = new WorkspaceInputDialog({\n                        title: 'New Folder',\n                        parentUri: parentUri,\n                        initialValue: vacantChildUri.path.base,\n                        validate: name => this.validateFileName(name, parent, true)\n                    }, this.labelProvider);\n                    dialog.open().then(name => {\n                        if (name) {\n                            this.fileSystem.createFolder(parentUri.resolve(name).toString());\n                        }\n                    });\n                }\n            })\n        }));\n        registry.registerCommand(WorkspaceCommands.FILE_RENAME, this.newMultiUriAwareCommandHandler({\n            isEnabled: uris => uris.some(uri => !this.isWorkspaceRoot(uri)) && uris.length === 1,\n            isVisible: uris => uris.some(uri => !this.isWorkspaceRoot(uri)) && uris.length === 1,\n            execute: uris => uris.forEach(uri => {\n                this.getParent(uri).then(async parent => {\n                    if (parent) {\n                        const initialValue = uri.path.base;\n                        const stat = await this.fileSystem.getFileStat(uri.toString());\n                        if (stat === undefined) {\n                            throw new Error(`Unexpected error occurred when renaming. File does not exist. URI: ${uri.toString(true)}.`);\n                        }\n                        const fileType = stat.isDirectory ? 'Directory' : 'File';\n                        const titleStr = `Rename ${fileType}`;\n                        const dialog = new SingleTextInputDialog({\n                            title: titleStr,\n                            initialValue,\n                            initialSelectionRange: {\n                                start: 0,\n                                end: uri.path.name.length\n                            },\n                            validate: (name, mode) => {\n                                if (initialValue === name && mode === 'preview') {\n                                    return false;\n                                }\n                                return this.validateFileName(name, parent, false);\n                            }\n                        });\n                        dialog.open().then(name => {\n                            if (name) {\n                                this.fileSystem.move(uri.toString(), uri.parent.resolve(name).toString(), { overwrite: true });\n                            }\n                        });\n                    }\n                });\n            })\n        }));\n        registry.registerCommand(WorkspaceCommands.FILE_DUPLICATE, this.newMultiUriAwareCommandHandler(this.duplicateHandler));\n        registry.registerCommand(WorkspaceCommands.FILE_DELETE, this.newMultiUriAwareCommandHandler(this.deleteHandler));\n        registry.registerCommand(WorkspaceCommands.FILE_COMPARE, this.newMultiUriAwareCommandHandler(this.compareHandler));\n        this.preferences.ready.then(() => {\n            registry.registerCommand(WorkspaceCommands.ADD_FOLDER, {\n                isEnabled: () => this.workspaceService.isMultiRootWorkspaceEnabled,\n                isVisible: () => this.workspaceService.isMultiRootWorkspaceEnabled,\n                execute: async () => {\n                    const uri = await this.fileDialogService.showOpenDialog({\n                        title: WorkspaceCommands.ADD_FOLDER.label!,\n                        canSelectFiles: false,\n                        canSelectFolders: true\n                    });\n                    if (!uri) {\n                        return;\n                    }\n                    const workspaceSavedBeforeAdding = this.workspaceService.saved;\n                    await this.addFolderToWorkspace(uri);\n                    if (!workspaceSavedBeforeAdding) {\n                        const saveCommand = registry.getCommand(WorkspaceCommands.SAVE_WORKSPACE_AS.id);\n                        if (saveCommand && await new ConfirmDialog({\n                            title: 'Folder added to Workspace',\n                            msg: 'A workspace with multiple roots was created. Do you want to save your workspace configuration as a file?',\n                            ok: 'Yes',\n                            cancel: 'No'\n                        }).open()) {\n                            registry.executeCommand(saveCommand.id);\n                        }\n                    }\n                }\n            });\n            registry.registerCommand(WorkspaceCommands.REMOVE_FOLDER, this.newMultiUriAwareCommandHandler({\n                execute: uris => this.removeFolderFromWorkspace(uris),\n                isEnabled: () => this.workspaceService.isMultiRootWorkspaceEnabled,\n                isVisible: uris => this.areWorkspaceRoots(uris) && this.workspaceService.saved\n            }));\n        });\n    }\n\n    protected newUriAwareCommandHandler(handler: UriCommandHandler<URI>): UriAwareCommandHandler<URI> {\n        return new UriAwareCommandHandler(this.selectionService, handler);\n    }\n\n    protected newMultiUriAwareCommandHandler(handler: UriCommandHandler<URI[]>): UriAwareCommandHandler<URI[]> {\n        return new UriAwareCommandHandler(this.selectionService, handler, { multi: true });\n    }\n\n    protected newWorkspaceRootUriAwareCommandHandler(handler: UriCommandHandler<URI>): WorkspaceRootUriAwareCommandHandler {\n        return new WorkspaceRootUriAwareCommandHandler(this.workspaceService, this.selectionService, handler);\n    }\n\n    /**\n     * Returns an error message if the file name is invalid. Otherwise, an empty string.\n     *\n     * @param name the simple file name of the file to validate.\n     * @param parent the parent directory's file stat.\n     * @param recursive allow file or folder creation using recursive path\n     */\n    protected async validateFileName(name: string, parent: FileStat, recursive: boolean = false): Promise<string> {\n        if (!name) {\n            return '';\n        }\n        // do not allow recursive rename\n        if (!recursive && !validFilename(name)) {\n            return 'Invalid file or folder name';\n        }\n        if (name.startsWith('/')) {\n            return 'Absolute paths or names that starts with / are not allowed';\n        } else if (name.startsWith(' ') || name.endsWith(' ')) {\n            return 'Names with leading or trailing whitespaces are not allowed';\n        }\n        // check and validate each sub-paths\n        if (name.split(/[\\\\/]/).some(file => !file || !validFilename(file) || /^\\s+$/.test(file))) {\n            return `The name \"${this.trimFileName(name)}\" is not a valid file or folder name.`;\n        }\n        const childUri = new URI(parent.uri).resolve(name).toString();\n        const exists = await this.fileSystem.exists(childUri);\n        if (exists) {\n            return `A file or folder \"${this.trimFileName(name)}\" already exists at this location.`;\n        }\n        return '';\n    }\n\n    protected trimFileName(name: string): string {\n        if (name && name.length > 30) {\n            return `${name.substr(0, 30)}...`;\n        }\n        return name;\n    }\n\n    protected async getDirectory(candidate: URI): Promise<FileStat | undefined> {\n        const stat = await this.fileSystem.getFileStat(candidate.toString());\n        if (stat && stat.isDirectory) {\n            return stat;\n        }\n        return this.getParent(candidate);\n    }\n\n    protected getParent(candidate: URI): Promise<FileStat | undefined> {\n        return this.fileSystem.getFileStat(candidate.parent.toString());\n    }\n\n    protected async addFolderToWorkspace(uri: URI | undefined): Promise<void> {\n        if (uri) {\n            const stat = await this.fileSystem.getFileStat(uri.toString());\n            if (stat && stat.isDirectory) {\n                await this.workspaceService.addRoot(uri);\n            }\n        }\n    }\n\n    protected areWorkspaceRoots(uris: URI[]): boolean {\n        return this.workspaceService.areWorkspaceRoots(uris);\n    }\n\n    protected isWorkspaceRoot(uri: URI): boolean {\n        const rootUris = new Set(this.workspaceService.tryGetRoots().map(root => root.uri));\n        return rootUris.has(uri.toString());\n    }\n\n    protected getDefaultFileConfig(): { fileName: string, fileExtension: string } {\n        return {\n            fileName: 'Untitled',\n            fileExtension: '.txt'\n        };\n    }\n\n    protected async removeFolderFromWorkspace(uris: URI[]): Promise<void> {\n        const roots = new Set(this.workspaceService.tryGetRoots().map(r => r.uri));\n        const toRemove = uris.filter(u => roots.has(u.toString()));\n        if (toRemove.length > 0) {\n            const messageContainer = document.createElement('div');\n            messageContainer.textContent = 'Remove the following folders from workspace? (note: nothing will be erased from disk)';\n            const list = document.createElement('ul');\n            list.style.listStyleType = 'none';\n            toRemove.forEach(u => {\n                const listItem = document.createElement('li');\n                listItem.textContent = u.displayName;\n                list.appendChild(listItem);\n            });\n            messageContainer.appendChild(list);\n            const dialog = new ConfirmDialog({\n                title: 'Remove Folder from Workspace',\n                msg: messageContainer\n            });\n            if (await dialog.open()) {\n                await this.workspaceService.removeRoots(toRemove);\n            }\n        }\n    }\n\n    protected areMultipleOpenHandlersPresent(openers: OpenHandler[], uri: URI): boolean {\n        let count = 0;\n        for (const opener of openers) {\n            if (opener.canHandle(uri) > 0) {\n                count++;\n            }\n            if (count > 1) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\nexport class WorkspaceRootUriAwareCommandHandler extends UriAwareCommandHandler<URI> {\n\n    constructor(\n        protected readonly workspaceService: WorkspaceService,\n        protected readonly selectionService: SelectionService,\n        protected readonly handler: UriCommandHandler<URI>\n    ) {\n        super(selectionService, handler);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public isEnabled(...args: any[]): boolean {\n        return super.isEnabled(...args) && !!this.workspaceService.tryGetRoots().length;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public isVisible(...args: any[]): boolean {\n        return super.isVisible(...args) && !!this.workspaceService.tryGetRoots().length;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected getUri(...args: any[]): URI | undefined {\n        const uri = super.getUri(...args);\n        // If the URI is available, return it immediately.\n        if (uri) {\n            return uri;\n        }\n        // Return the first root if available.\n        if (!!this.workspaceService.tryGetRoots().length) {\n            return new URI(this.workspaceService.tryGetRoots()[0].uri);\n        }\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2019 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { UriCommandHandler } from '@theia/core/lib/common/uri-command-handler';\nimport { DiffService } from './diff-service';\n\n@injectable()\nexport class WorkspaceCompareHandler implements UriCommandHandler<URI[]> {\n\n    @inject(DiffService) protected readonly diffService: DiffService;\n\n    /**\n     * Determine if the command is visible.\n     *\n     * @param uris URIs of selected resources.\n     * @returns `true` if the command is visible.\n     */\n    isVisible(uris: URI[]): boolean {\n        return uris.length === 2;\n    }\n\n    /**\n     * Determine if the command is enabled.\n     *\n     * @param uris URIs of selected resources.\n     * @returns `true` if the command is enabled.\n     */\n    isEnabled(uris: URI[]): boolean {\n        return uris.length === 2;\n    }\n\n    /**\n     * Execute the command.\n     *\n     * @param uris URIs of selected resources.\n     */\n    async execute(uris: URI[]): Promise<void> {\n        const [left, right] = uris;\n        await this.diffService.openDiffEditor(left, right);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { ConfirmDialog, ApplicationShell, SaveableWidget, NavigatableWidget } from '@theia/core/lib/browser';\nimport { FileSystem } from '@theia/filesystem/lib/common';\nimport { UriCommandHandler } from '@theia/core/lib/common/uri-command-handler';\nimport { WorkspaceService } from './workspace-service';\nimport { WorkspaceUtils } from './workspace-utils';\n\n@injectable()\nexport class WorkspaceDeleteHandler implements UriCommandHandler<URI[]> {\n\n    @inject(FileSystem)\n    protected readonly fileSystem: FileSystem;\n\n    @inject(ApplicationShell)\n    protected readonly shell: ApplicationShell;\n\n    @inject(WorkspaceUtils)\n    protected readonly workspaceUtils: WorkspaceUtils;\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    /**\n     * Determine if the command is visible.\n     *\n     * @param uris URIs of selected resources.\n     * @returns `true` if the command is visible.\n     */\n    isVisible(uris: URI[]): boolean {\n        return !!uris.length && !this.workspaceUtils.containsRootDirectory(uris);\n    }\n\n    /**\n     * Determine if the command is enabled.\n     *\n     * @param uris URIs of selected resources.\n     * @returns `true` if the command is enabled.\n     */\n    isEnabled(uris: URI[]): boolean {\n        return !!uris.length && !this.workspaceUtils.containsRootDirectory(uris);\n    }\n\n    /**\n     * Execute the command.\n     *\n     * @param uris URIs of selected resources.\n     */\n    async execute(uris: URI[]): Promise<void> {\n        const distinctUris = URI.getDistinctParents(uris);\n        if (await this.confirm(distinctUris)) {\n            await Promise.all(distinctUris.map(uri => this.delete(uri)));\n        }\n    }\n\n    /**\n     * Display dialog to confirm deletion.\n     *\n     * @param uris URIs of selected resources.\n     */\n    protected confirm(uris: URI[]): Promise<boolean | undefined> {\n        return new ConfirmDialog({\n            title: `Delete File${uris.length === 1 ? '' : 's'}`,\n            msg: this.getConfirmMessage(uris)\n        }).open();\n    }\n\n    /**\n     * Get the dialog confirmation message for deletion.\n     *\n     * @param uris URIs of selected resources.\n     */\n    protected getConfirmMessage(uris: URI[]): string | HTMLElement {\n        const dirty = this.getDirty(uris);\n        if (dirty.length) {\n            if (dirty.length === 1) {\n                return `Do you really want to delete ${dirty[0].path.base} with unsaved changes?`;\n            }\n            return `Do you really want to delete ${dirty.length} files with unsaved changes?`;\n        }\n        if (uris.length === 1) {\n            return `Do you really want to delete ${uris[0].path.base}?`;\n        }\n        if (uris.length > 10) {\n            return `Do you really want to delete all the ${uris.length} selected files?`;\n        }\n        const messageContainer = document.createElement('div');\n        messageContainer.textContent = 'Do you really want to delete the following files?';\n        const list = document.createElement('ul');\n        list.style.listStyleType = 'none';\n        for (const uri of uris) {\n            const listItem = document.createElement('li');\n            listItem.textContent = uri.path.base;\n            list.appendChild(listItem);\n        }\n        messageContainer.appendChild(list);\n        return messageContainer;\n    }\n\n    /**\n     * Get which URI are presently dirty.\n     *\n     * @param uris URIs of selected resources.\n     * @returns An array of dirty URI.\n     */\n    protected getDirty(uris: URI[]): URI[] {\n        const dirty = new Map<string, URI>();\n        const widgets = NavigatableWidget.getAffected(SaveableWidget.getDirty(this.shell.widgets), uris);\n        for (const [resourceUri] of widgets) {\n            dirty.set(resourceUri.toString(), resourceUri);\n        }\n        return [...dirty.values()];\n    }\n\n    /**\n     * Perform deletion of a given URI.\n     *\n     * @param uris URIs of selected resources.\n     */\n    protected async delete(uri: URI): Promise<void> {\n        try {\n            await Promise.all([\n                this.closeWithoutSaving(uri),\n                this.fileSystem.delete(uri.toString())\n            ]);\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    /**\n     * Close widget without saving changes.\n     *\n     * @param uri URI of a selected resource.\n     */\n    protected async closeWithoutSaving(uri: URI): Promise<void> {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const pending: Promise<any>[] = [];\n        for (const [, widget] of NavigatableWidget.getAffected(this.shell.widgets, uri)) {\n            pending.push(this.shell.closeWidget(widget.id, { save: false }));\n        }\n        await Promise.all(pending);\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { WorkspaceServer } from '../common';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class WorkspaceDummyServer implements WorkspaceServer {\n    public getMostRecentlyUsedWorkspace(): Promise<string | undefined> {\n        return new Promise((resolve, reject) => {\n            resolve('/');\n        });\n    }\n\n    /**\n     * Sets the desired string representation of the URI as the most recently used workspace folder.\n     */\n    public setMostRecentlyUsedWorkspace(uri: string): Promise<void> {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    }\n\n    /**\n     * Returns list of recently opened workspaces as an array.\n     */\n    public getRecentWorkspaces(): Promise<string[]> {\n        return new Promise((resolve, reject) => {\n            resolve(['/']);\n        });\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport URI from '@theia/core/lib/common/uri';\nimport { injectable, inject } from 'inversify';\nimport { WorkspaceUtils } from './workspace-utils';\nimport { WorkspaceService } from './workspace-service';\nimport { FileSystem } from '@theia/filesystem/lib/common/filesystem';\nimport { UriCommandHandler } from '@theia/core/lib/common/uri-command-handler';\nimport { FileSystemUtils } from '@theia/filesystem/lib/common/filesystem-utils';\n\n@injectable()\nexport class WorkspaceDuplicateHandler implements UriCommandHandler<URI[]> {\n\n    @inject(FileSystem)\n    protected readonly fileSystem: FileSystem;\n\n    @inject(WorkspaceUtils)\n    protected readonly workspaceUtils: WorkspaceUtils;\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    /**\n     * Determine if the command is visible.\n     *\n     * @param uris URIs of selected resources.\n     * @returns `true` if the command is visible.\n     */\n    isVisible(uris: URI[]): boolean {\n        return !!uris.length && !this.workspaceUtils.containsRootDirectory(uris);\n    }\n\n    /**\n     * Determine if the command is enabled.\n     *\n     * @param uris URIs of selected resources.\n     * @returns `true` if the command is enabled.\n     */\n    isEnabled(uris: URI[]): boolean {\n        return !!uris.length && !this.workspaceUtils.containsRootDirectory(uris);\n    }\n\n    /**\n     * Execute the command.\n     *\n     * @param uris URIs of selected resources.\n     */\n    async execute(uris: URI[]): Promise<void> {\n        await Promise.all(uris.map(async uri => {\n            const parent = await this.fileSystem.getFileStat(uri.parent.toString());\n            if (parent) {\n                const parentUri = new URI(parent.uri);\n                const name = uri.path.name + '_copy';\n                const ext = uri.path.ext;\n                const target = FileSystemUtils.generateUniqueResourceURI(parentUri, parent, name, ext);\n                try {\n                    this.fileSystem.copy(uri.toString(), target.toString());\n                } catch (e) {\n                    console.error(e);\n                }\n            }\n        }));\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport { CommandContribution, CommandRegistry, MenuContribution, MenuModelRegistry, SelectionService } from '@theia/core/lib/common';\nimport { isOSX, environment, OS } from '@theia/core';\nimport {\n    open, OpenerService, CommonMenus, StorageService, LabelProvider,\n    ConfirmDialog, KeybindingRegistry, KeybindingContribution, CommonCommands\n} from '@theia/core/lib/browser';\nimport { FileDialogService, OpenFileDialogProps, FileDialogTreeFilters } from '@theia/filesystem/lib/browser';\nimport { FileSystem } from '@theia/filesystem/lib/common';\nimport { ContextKeyService } from '@theia/core/lib/browser/context-key-service';\nimport { WorkspaceService } from './workspace-service';\nimport { THEIA_EXT, VSCODE_EXT } from '../common';\nimport { WorkspaceCommands } from './workspace-commands';\nimport { QuickOpenWorkspace } from './quick-open-workspace';\nimport { WorkspacePreferences } from './workspace-preferences';\nimport URI from '@theia/core/lib/common/uri';\nimport { UriAwareCommandHandler } from '@theia/core/lib/common/uri-command-handler';\n\n@injectable()\nexport class WorkspaceFrontendContribution implements CommandContribution, KeybindingContribution, MenuContribution {\n\n    @inject(FileSystem) protected readonly fileSystem: FileSystem;\n    @inject(OpenerService) protected readonly openerService: OpenerService;\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(StorageService) protected readonly workspaceStorage: StorageService;\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n    @inject(QuickOpenWorkspace) protected readonly quickOpenWorkspace: QuickOpenWorkspace;\n    @inject(FileDialogService) protected readonly fileDialogService: FileDialogService;\n    @inject(WorkspacePreferences) protected preferences: WorkspacePreferences;\n    @inject(SelectionService) protected readonly selectionService: SelectionService;\n    @inject(CommandRegistry) protected readonly commandRegistry: CommandRegistry;\n\n    @inject(ContextKeyService)\n    protected readonly contextKeyService: ContextKeyService;\n\n    @postConstruct()\n    protected init(): void {\n        this.initWorkspaceContextKeys();\n    }\n\n    protected initWorkspaceContextKeys(): void {\n        const workspaceFolderCountKey = this.contextKeyService.createKey<number>('workspaceFolderCount', 0);\n        const updateWorkspaceFolderCountKey = () => workspaceFolderCountKey.set(this.workspaceService.tryGetRoots().length);\n        updateWorkspaceFolderCountKey();\n        this.updateStyles();\n        this.workspaceService.onWorkspaceChanged(() => {\n            updateWorkspaceFolderCountKey();\n            this.updateStyles();\n        });\n    }\n\n    protected updateStyles(): void {\n        document.body.classList.remove('theia-no-open-workspace');\n        if (!this.workspaceService.tryGetRoots().length) {\n            document.body.classList.add('theia-no-open-workspace');\n        }\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        // Not visible/enabled on Windows/Linux in electron.\n        commands.registerCommand(WorkspaceCommands.OPEN, {\n            isEnabled: () => isOSX || !this.isElectron(),\n            isVisible: () => isOSX || !this.isElectron(),\n            execute: () => this.doOpen()\n        });\n        // Visible/enabled only on Windows/Linux in electron.\n        commands.registerCommand(WorkspaceCommands.OPEN_FILE, {\n            isEnabled: () => true,\n            execute: () => this.doOpenFile()\n        });\n        // Visible/enabled only on Windows/Linux in electron.\n        commands.registerCommand(WorkspaceCommands.OPEN_FOLDER, {\n            isEnabled: () => true,\n            execute: () => this.doOpenFolder()\n        });\n        // commands.registerCommand(WorkspaceCommands.OPEN_WORKSPACE, {\n        //     isEnabled: () => true,\n        //     execute: () => this.doOpenWorkspace()\n        // });\n        commands.registerCommand(WorkspaceCommands.CLOSE, {\n            isEnabled: () => this.workspaceService.opened,\n            execute: () => this.closeWorkspace()\n        });\n        // commands.registerCommand(WorkspaceCommands.OPEN_RECENT_WORKSPACE, {\n        //     execute: () => this.quickOpenWorkspace.select()\n        // });\n        commands.registerCommand(WorkspaceCommands.SAVE_WORKSPACE_AS, {\n            isEnabled: () => this.workspaceService.isMultiRootWorkspaceEnabled,\n            execute: () => this.saveWorkspaceAs()\n        });\n        commands.registerCommand(WorkspaceCommands.SAVE_AS,\n            new UriAwareCommandHandler(this.selectionService, {\n                execute: (uri: URI) => this.saveAs(uri),\n            }));\n    }\n\n    registerMenus(menus: MenuModelRegistry): void {\n        if (isOSX || !this.isElectron()) {\n            menus.registerMenuAction(CommonMenus.FILE_OPEN, {\n                commandId: WorkspaceCommands.OPEN.id,\n                order: 'a00'\n            });\n        }\n        if (!isOSX && this.isElectron()) {\n            menus.registerMenuAction(CommonMenus.FILE_OPEN, {\n                commandId: WorkspaceCommands.OPEN_FILE.id,\n                label: `${WorkspaceCommands.OPEN_FILE.dialogLabel}...`,\n                order: 'a01'\n            });\n            menus.registerMenuAction(CommonMenus.FILE_OPEN, {\n                commandId: WorkspaceCommands.OPEN_FOLDER.id,\n                label: `${WorkspaceCommands.OPEN_FOLDER.dialogLabel}...`,\n                order: 'a02'\n            });\n        }\n        // menus.registerMenuAction(CommonMenus.FILE_OPEN, {\n        //     commandId: WorkspaceCommands.OPEN_WORKSPACE.id,\n        //     order: 'a10'\n        // });\n        // menus.registerMenuAction(CommonMenus.FILE_OPEN, {\n        //     commandId: WorkspaceCommands.OPEN_RECENT_WORKSPACE.id,\n        //     order: 'a20'\n        // });\n        menus.registerMenuAction(CommonMenus.FILE_OPEN, {\n            commandId: WorkspaceCommands.SAVE_WORKSPACE_AS.id,\n            order: 'a30'\n        });\n\n        menus.registerMenuAction(CommonMenus.FILE_CLOSE, {\n            commandId: WorkspaceCommands.CLOSE.id\n        });\n\n        menus.registerMenuAction(CommonMenus.FILE_SAVE, {\n            commandId: WorkspaceCommands.SAVE_AS.id,\n        });\n    }\n\n    registerKeybindings(keybindings: KeybindingRegistry): void {\n        keybindings.registerKeybinding({\n            command: WorkspaceCommands.NEW_FILE.id,\n            keybinding: this.isElectron() ? 'ctrlcmd+n' : 'alt+n',\n        });\n        keybindings.registerKeybinding({\n            command: isOSX || !this.isElectron() ? WorkspaceCommands.OPEN.id : WorkspaceCommands.OPEN_FILE.id,\n            keybinding: this.isElectron() ? 'ctrlcmd+o' : 'ctrlcmd+alt+o',\n        });\n        if (!isOSX && this.isElectron()) {\n            keybindings.registerKeybinding({\n                command: WorkspaceCommands.OPEN_FOLDER.id,\n                keybinding: 'ctrl+k ctrl+o',\n            });\n        }\n        // keybindings.registerKeybinding({\n        //     command: WorkspaceCommands.OPEN_WORKSPACE.id,\n        //     keybinding: 'ctrlcmd+alt+w',\n        // });\n        // keybindings.registerKeybinding({\n        //     command: WorkspaceCommands.OPEN_RECENT_WORKSPACE.id,\n        //     keybinding: 'ctrlcmd+alt+r',\n        // });\n        keybindings.registerKeybinding({\n            command: WorkspaceCommands.SAVE_AS.id,\n            keybinding: 'ctrlcmd+shift+s',\n        });\n    }\n\n    /**\n     * This is the generic `Open` method. Opens files and directories too. Resolves to the opened URI.\n     * Except when you are on either Windows or Linux `AND` running in electron. If so, it opens a file.\n     */\n    protected async doOpen(): Promise<URI | undefined> {\n        if (!isOSX && this.isElectron()) {\n            return this.doOpenFile();\n        }\n        const [rootStat] = await this.workspaceService.roots;\n        const destinationUri = await this.fileDialogService.showOpenDialog({\n            title: WorkspaceCommands.OPEN.dialogLabel,\n            canSelectFolders: true,\n            canSelectFiles: true\n        }, rootStat);\n        if (destinationUri && this.getCurrentWorkspaceUri().toString() !== destinationUri.toString()) {\n            const destination = await this.fileSystem.getFileStat(destinationUri.toString());\n            if (destination) {\n                if (destination.isDirectory) {\n                    this.workspaceService.open(destinationUri);\n                } else {\n                    await open(this.openerService, destinationUri);\n                }\n                return destinationUri;\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Opens a file after prompting the `Open File` dialog. Resolves to `undefined`, if\n     *  - the workspace root is not set,\n     *  - the file to open does not exist, or\n     *  - it was not a file, but a directory.\n     *\n     * Otherwise, resolves to the URI of the file.\n     */\n    protected async doOpenFile(): Promise<URI | undefined> {\n        const props: OpenFileDialogProps = {\n            title: WorkspaceCommands.OPEN_FILE.dialogLabel,\n            canSelectFolders: false,\n            canSelectFiles: true\n        };\n        const [rootStat] = await this.workspaceService.roots;\n        const destinationFileUri = await this.fileDialogService.showOpenDialog(props, rootStat);\n        if (destinationFileUri) {\n            const destinationFile = await this.fileSystem.getFileStat(destinationFileUri.toString());\n            if (destinationFile && !destinationFile.isDirectory) {\n                await open(this.openerService, destinationFileUri);\n                return destinationFileUri;\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Opens a folder after prompting the `Open Folder` dialog. Resolves to `undefined`, if\n     *  - the workspace root is not set,\n     *  - the folder to open does not exist, or\n     *  - it was not a directory, but a file resource.\n     *\n     * Otherwise, resolves to the URI of the folder.\n     */\n    protected async doOpenFolder(): Promise<URI | undefined> {\n        const props: OpenFileDialogProps = {\n            title: WorkspaceCommands.OPEN_FOLDER.dialogLabel,\n            canSelectFolders: true,\n            canSelectFiles: false\n        };\n        const [rootStat] = await this.workspaceService.roots;\n        const destinationFolderUri = await this.fileDialogService.showOpenDialog(props, rootStat);\n        if (destinationFolderUri &&\n            this.getCurrentWorkspaceUri().toString() !== destinationFolderUri.toString()) {\n            const destinationFolder = await this.fileSystem.getFileStat(destinationFolderUri.toString());\n            if (destinationFolder && destinationFolder.isDirectory) {\n                this.workspaceService.open(destinationFolderUri);\n                return destinationFolderUri;\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Opens a workspace after raising the `Open Workspace` dialog. Resolves to the URI of the recently opened workspace,\n     * if it was successful. Otherwise, resolves to `undefined`.\n     *\n     * **Caveat**: this behaves differently on different platforms, the `workspace.supportMultiRootWorkspace` preference value **does** matter,\n     * and `electron`/`browser` version has impact too. See [here](https://github.com/eclipse-theia/theia/pull/3202#issuecomment-430884195) for more details.\n     *\n     * Legend:\n     *  - `workspace.supportMultiRootWorkspace` is `false`: => `N`\n     *  - `workspace.supportMultiRootWorkspace` is `true`: => `Y`\n     *  - Folders only: => `F`\n     *  - Workspace files only: => `W`\n     *  - Folders and workspace files: => `FW`\n     *\n     * -----\n     *\n     * |---------|-----------|-----------|------------|------------|\n     * |         | browser Y | browser N | electron Y | electron N |\n     * |---------|-----------|-----------|------------|------------|\n     * | Linux   |     FW    |     F     |     W      |     F      |\n     * | Windows |     FW    |     F     |     W      |     F      |\n     * | OS X    |     FW    |     F     |     FW     |     FW     |\n     * |---------|-----------|-----------|------------|------------|\n     *\n     */\n    protected async doOpenWorkspace(): Promise<URI | undefined> {\n        const props = await this.openWorkspaceOpenFileDialogProps();\n        const [rootStat] = await this.workspaceService.roots;\n        const workspaceFolderOrWorkspaceFileUri = await this.fileDialogService.showOpenDialog(props, rootStat);\n        if (workspaceFolderOrWorkspaceFileUri &&\n            this.getCurrentWorkspaceUri().toString() !== workspaceFolderOrWorkspaceFileUri.toString()) {\n            const destinationFolder = await this.fileSystem.getFileStat(workspaceFolderOrWorkspaceFileUri.toString());\n            if (destinationFolder) {\n                this.workspaceService.open(workspaceFolderOrWorkspaceFileUri);\n                return workspaceFolderOrWorkspaceFileUri;\n            }\n        }\n        return undefined;\n    }\n\n    protected async openWorkspaceOpenFileDialogProps(): Promise<OpenFileDialogProps> {\n        await this.preferences.ready;\n        const supportMultiRootWorkspace = this.preferences['workspace.supportMultiRootWorkspace'];\n        const type = OS.type();\n        const electron = this.isElectron();\n        return WorkspaceFrontendContribution.createOpenWorkspaceOpenFileDialogProps({\n            type,\n            electron,\n            supportMultiRootWorkspace\n        });\n    }\n\n    protected async closeWorkspace(): Promise<void> {\n        const dialog = new ConfirmDialog({\n            title: WorkspaceCommands.CLOSE.label!,\n            msg: 'Do you really want to close the workspace?'\n        });\n        if (await dialog.open()) {\n            await this.workspaceService.close();\n        }\n    }\n\n    protected async saveWorkspaceAs(): Promise<void> {\n        let exist: boolean = false;\n        let overwrite: boolean = false;\n        let selected: URI | undefined;\n        do {\n            selected = await this.fileDialogService.showSaveDialog({\n                title: WorkspaceCommands.SAVE_WORKSPACE_AS.label!,\n                filters: WorkspaceFrontendContribution.DEFAULT_FILE_FILTER\n            });\n            if (selected) {\n                const displayName = selected.displayName;\n                if (!displayName.endsWith(`.${THEIA_EXT}`) && !displayName.endsWith(`.${VSCODE_EXT}`)) {\n                    selected = selected.parent.resolve(`${displayName}.${THEIA_EXT}`);\n                }\n                exist = await this.fileSystem.exists(selected.toString());\n                if (exist) {\n                    overwrite = await this.confirmOverwrite(selected);\n                }\n            }\n        } while (selected && exist && !overwrite);\n\n        if (selected) {\n            this.workspaceService.save(selected);\n        }\n    }\n\n    /**\n     * Save source `URI` to target.\n     *\n     * @param uri the source `URI`.\n     */\n    protected async saveAs(uri: URI): Promise<void> {\n        let exist: boolean = false;\n        let overwrite: boolean = false;\n        let selected: URI | undefined;\n        const stat = await this.fileSystem.getFileStat(uri.toString());\n        do {\n            selected = await this.fileDialogService.showSaveDialog(\n                {\n                    title: WorkspaceCommands.SAVE_AS.label!,\n                    filters: {},\n                    inputValue: uri.path.base\n                }, stat);\n            if (selected) {\n                exist = await this.fileSystem.exists(selected.toString());\n                if (exist) {\n                    overwrite = await this.confirmOverwrite(selected);\n                }\n            }\n        } while (selected && exist && !overwrite);\n        if (selected) {\n            try {\n                await this.commandRegistry.executeCommand(CommonCommands.SAVE.id);\n                await this.fileSystem.copy(uri.toString(), selected.toString(), { overwrite });\n            } catch (e) {\n                console.warn(e);\n            }\n        }\n    }\n\n    private async confirmOverwrite(uri: URI): Promise<boolean> {\n        // Electron already handles the confirmation so do not prompt again.\n        if (this.isElectron()) {\n            return true;\n        }\n        // Prompt users for confirmation before overwriting.\n        const confirmed = await new ConfirmDialog({\n            title: 'Overwrite',\n            msg: `Do you really want to overwrite \"${uri.toString()}\"?`\n        }).open();\n        return !!confirmed;\n    }\n\n    private isElectron(): boolean {\n        return environment.electron.is();\n    }\n\n    /**\n     * Get the current workspace URI.\n     *\n     * @returns the current workspace URI.\n     */\n    private getCurrentWorkspaceUri(): URI {\n        return new URI(this.workspaceService.workspace && this.workspaceService.workspace.uri);\n    }\n\n}\n\nexport namespace WorkspaceFrontendContribution {\n\n    /**\n     * File filter for all Theia and VS Code workspace file types.\n     */\n    export const DEFAULT_FILE_FILTER: FileDialogTreeFilters = {\n        'Theia Workspace (*.theia-workspace)': [THEIA_EXT],\n        'VS Code Workspace (*.code-workspace)': [VSCODE_EXT]\n    };\n\n    /**\n     * Returns with an `OpenFileDialogProps` for opening the `Open Workspace` dialog.\n     */\n    export function createOpenWorkspaceOpenFileDialogProps(options: Readonly<{ type: OS.Type, electron: boolean, supportMultiRootWorkspace: boolean }>): OpenFileDialogProps {\n        const { electron, type, supportMultiRootWorkspace } = options;\n        const title = WorkspaceCommands.OPEN_WORKSPACE.dialogLabel;\n        // If browser\n        if (!electron) {\n            // and multi-root workspace is supported, it is always folder + workspace files.\n            if (supportMultiRootWorkspace) {\n                return {\n                    title,\n                    canSelectFiles: true,\n                    canSelectFolders: true,\n                    filters: DEFAULT_FILE_FILTER\n                };\n            } else {\n                // otherwise, it is always folders. No files at all.\n                return {\n                    title,\n                    canSelectFiles: false,\n                    canSelectFolders: true\n                };\n            }\n        }\n\n        // If electron\n        if (OS.Type.OSX === type) {\n            // `Finder` can select folders and files at the same time. We allow folders and workspace files.\n            return {\n                title,\n                canSelectFiles: true,\n                canSelectFolders: true,\n                filters: DEFAULT_FILE_FILTER\n            };\n        }\n\n        // In electron, only workspace files can be selected when the multi-root workspace feature is enabled.\n        if (supportMultiRootWorkspace) {\n            return {\n                title,\n                canSelectFiles: true,\n                canSelectFolders: false,\n                filters: DEFAULT_FILE_FILTER\n            };\n        }\n\n        // Otherwise, it is always a folder.\n        return {\n            title,\n            canSelectFiles: false,\n            canSelectFolders: true\n        };\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule, interfaces } from 'inversify';\nimport { CommandContribution, MenuContribution } from '@theia/core/lib/common';\nimport { /* WebSocketConnectionProvider, */ FrontendApplicationContribution, KeybindingContribution } from '@theia/core/lib/browser';\nimport {\n    OpenFileDialogFactory,\n    SaveFileDialogFactory,\n    OpenFileDialogProps,\n    SaveFileDialogProps,\n    createOpenFileDialogContainer,\n    createSaveFileDialogContainer,\n    OpenFileDialog,\n    SaveFileDialog\n} from '@theia/filesystem/lib/browser';\nimport { StorageService } from '@theia/core/lib/browser/storage-service';\nimport { LabelProviderContribution } from '@theia/core/lib/browser/label-provider';\nimport { VariableContribution } from '@theia/variable-resolver/lib/browser';\nimport { WorkspaceServer, /* workspacePath */ } from '../common';\nimport { WorkspaceFrontendContribution } from './workspace-frontend-contribution';\nimport { WorkspaceService } from './workspace-service';\nimport { WorkspaceCommandContribution, FileMenuContribution, EditMenuContribution } from './workspace-commands';\nimport { WorkspaceVariableContribution } from './workspace-variable-contribution';\nimport { WorkspaceStorageService } from './workspace-storage-service';\nimport { WorkspaceUriLabelProviderContribution } from './workspace-uri-contribution';\nimport { bindWorkspacePreferences } from './workspace-preferences';\nimport { QuickOpenWorkspace } from './quick-open-workspace';\nimport { WorkspaceDeleteHandler } from './workspace-delete-handler';\nimport { WorkspaceDuplicateHandler } from './workspace-duplicate-handler';\nimport { WorkspaceUtils } from './workspace-utils';\nimport { WorkspaceCompareHandler } from './workspace-compare-handler';\nimport { DiffService } from './diff-service';\nimport { WorkspaceDummyServer } from './workspace-dummy-server';\n\nexport default new ContainerModule((bind: interfaces.Bind, unbind: interfaces.Unbind, isBound: interfaces.IsBound, rebind: interfaces.Rebind) => {\n    bindWorkspacePreferences(bind);\n\n    bind(WorkspaceService).toSelf().inSingletonScope();\n    bind(FrontendApplicationContribution).toService(WorkspaceService);\n    // bind(WorkspaceServer).toDynamicValue(ctx => {\n    //     const provider = ctx.container.get(WebSocketConnectionProvider);\n    //     return provider.createProxy<WorkspaceServer>(workspacePath);\n    // }).inSingletonScope();\n    bind(WorkspaceServer).to(WorkspaceDummyServer).inSingletonScope();\n\n    bind(WorkspaceFrontendContribution).toSelf().inSingletonScope();\n    for (const identifier of [CommandContribution, KeybindingContribution, MenuContribution]) {\n        bind(identifier).toService(WorkspaceFrontendContribution);\n    }\n\n    bind(OpenFileDialogFactory).toFactory(ctx =>\n        (props: OpenFileDialogProps) =>\n            createOpenFileDialogContainer(ctx.container, props).get(OpenFileDialog)\n    );\n\n    bind(SaveFileDialogFactory).toFactory(ctx =>\n        (props: SaveFileDialogProps) =>\n            createSaveFileDialogContainer(ctx.container, props).get(SaveFileDialog)\n    );\n\n    bind(WorkspaceCommandContribution).toSelf().inSingletonScope();\n    bind(CommandContribution).toService(WorkspaceCommandContribution);\n    bind(MenuContribution).to(FileMenuContribution).inSingletonScope();\n    bind(MenuContribution).to(EditMenuContribution).inSingletonScope();\n    bind(WorkspaceDeleteHandler).toSelf().inSingletonScope();\n    bind(WorkspaceDuplicateHandler).toSelf().inSingletonScope();\n    bind(WorkspaceCompareHandler).toSelf().inSingletonScope();\n    bind(DiffService).toSelf().inSingletonScope();\n\n    bind(WorkspaceStorageService).toSelf().inSingletonScope();\n    rebind(StorageService).toService(WorkspaceStorageService);\n\n    bind(LabelProviderContribution).to(WorkspaceUriLabelProviderContribution).inSingletonScope();\n    bind(WorkspaceVariableContribution).toSelf().inSingletonScope();\n    bind(VariableContribution).toService(WorkspaceVariableContribution);\n\n    bind(QuickOpenWorkspace).toSelf().inSingletonScope();\n\n    bind(WorkspaceUtils).toSelf().inSingletonScope();\n});\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { SingleTextInputDialog, SingleTextInputDialogProps, LabelProvider } from '@theia/core/lib/browser';\n\n@injectable()\nexport class WorkspaceInputDialogProps extends SingleTextInputDialogProps {\n    /**\n     * The parent `URI` for the selection present in the explorer.\n     * Used to display the path in which the file/folder is created at.\n     */\n    parentUri: URI;\n}\n\nexport class WorkspaceInputDialog extends SingleTextInputDialog {\n\n    constructor(\n        @inject(WorkspaceInputDialogProps) protected readonly props: WorkspaceInputDialogProps,\n        @inject(LabelProvider) protected readonly labelProvider: LabelProvider,\n    ) {\n        super(props);\n        this.appendParentPath();\n    }\n\n    /**\n     * Append the human-readable parent `path` to the dialog.\n     * When possible, display the relative path, else display the full path (ex: workspace root).\n     */\n    protected appendParentPath(): void {\n        // Compute the label for the parent URI.\n        const label = this.labelProvider.getLongName(this.props.parentUri);\n        const element = document.createElement('div');\n        // Create the `folder` icon.\n        const icon = document.createElement('i');\n        icon.classList.add('fa', 'fa-folder');\n        icon.style.marginRight = '0.5em';\n        element.appendChild(icon);\n        element.appendChild(document.createTextNode(label));\n        // Add the path and icon div before the `inputField`.\n        this.contentNode.insertBefore(element, this.inputField);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces } from 'inversify';\nimport {\n    createPreferenceProxy,\n    PreferenceProxy,\n    PreferenceService,\n    PreferenceSchema,\n    PreferenceContribution\n} from '@theia/core/lib/browser/preferences';\n\nexport const workspacePreferenceSchema: PreferenceSchema = {\n    type: 'object',\n    properties: {\n        'workspace.preserveWindow': {\n            description: 'Enable opening workspaces in current window.',\n            type: 'boolean',\n            default: false\n        },\n        'workspace.supportMultiRootWorkspace': {\n            description: 'Controls whether multi-root workspace support is enabled.',\n            type: 'boolean',\n            default: false\n        }\n    }\n};\n\nexport interface WorkspaceConfiguration {\n    'workspace.preserveWindow': boolean,\n    'workspace.supportMultiRootWorkspace': boolean\n}\n\nexport const WorkspacePreferences = Symbol('WorkspacePreferences');\nexport type WorkspacePreferences = PreferenceProxy<WorkspaceConfiguration>;\n\nexport function createWorkspacePreferences(preferences: PreferenceService): WorkspacePreferences {\n    return createPreferenceProxy(preferences, workspacePreferenceSchema);\n}\n\nexport function bindWorkspacePreferences(bind: interfaces.Bind): void {\n    bind(WorkspacePreferences).toDynamicValue(ctx => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        return createWorkspacePreferences(preferences);\n    }).inSingletonScope();\n\n    bind(PreferenceContribution).toConstantValue({ schema: workspacePreferenceSchema });\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { FileSystem, FileStat } from '@theia/filesystem/lib/common';\nimport { FileSystemWatcher, FileChangeEvent } from '@theia/filesystem/lib/browser/filesystem-watcher';\nimport { WorkspaceServer, THEIA_EXT, VSCODE_EXT, getTemporaryWorkspaceFileUri } from '../common';\nimport { WindowService } from '@theia/core/lib/browser/window/window-service';\nimport {\n    FrontendApplicationContribution, PreferenceServiceImpl, PreferenceScope, PreferenceSchemaProvider\n} from '@theia/core/lib/browser';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { EnvVariablesServer } from '@theia/core/lib/common/env-variables';\nimport { ILogger, Disposable, DisposableCollection, Emitter, Event, MaybePromise } from '@theia/core';\nimport { WorkspacePreferences } from './workspace-preferences';\nimport * as jsoncparser from 'jsonc-parser';\nimport * as Ajv from 'ajv';\nimport { FrontendApplicationConfigProvider } from '@theia/core/lib/browser/frontend-application-config-provider';\n\n/**\n * The workspace service.\n */\n@injectable()\nexport class WorkspaceService implements FrontendApplicationContribution {\n\n    private _workspace: FileStat | undefined;\n\n    private _roots: FileStat[] = [];\n    private deferredRoots = new Deferred<FileStat[]>();\n\n    @inject(FileSystem)\n    protected readonly fileSystem: FileSystem;\n\n    @inject(FileSystemWatcher)\n    protected readonly watcher: FileSystemWatcher;\n\n    @inject(WorkspaceServer)\n    protected readonly server: WorkspaceServer;\n\n    @inject(WindowService)\n    protected readonly windowService: WindowService;\n\n    @inject(ILogger)\n    protected logger: ILogger;\n\n    @inject(WorkspacePreferences)\n    protected preferences: WorkspacePreferences;\n\n    @inject(PreferenceServiceImpl)\n    protected readonly preferenceImpl: PreferenceServiceImpl;\n\n    @inject(PreferenceSchemaProvider)\n    protected readonly schemaProvider: PreferenceSchemaProvider;\n\n    @inject(EnvVariablesServer)\n    protected readonly envVariableServer: EnvVariablesServer;\n\n    protected applicationName: string;\n\n    @postConstruct()\n    protected async init(): Promise<void> {\n        this.applicationName = FrontendApplicationConfigProvider.get().applicationName;\n        const wsUriString = await this.getDefaultWorkspaceUri();\n        const wsStat = await this.toFileStat(wsUriString);\n        await this.setWorkspace(wsStat);\n\n        this.watcher.onFilesChanged(event => {\n            if (this._workspace && FileChangeEvent.isAffected(event, new URI(this._workspace.uri))) {\n                this.updateWorkspace();\n            }\n        });\n        this.preferences.onPreferenceChanged(event => {\n            const multiRootPrefName = 'workspace.supportMultiRootWorkspace';\n            if (event.preferenceName === multiRootPrefName) {\n                this.updateWorkspace();\n            }\n        });\n    }\n\n    /**\n     * Resolves to the default workspace URI as string.\n     *\n     * The default implementation tries to extract the default workspace location\n     * from the `window.location.hash`, then falls-back to the most recently\n     * used workspace root from the server.\n     *\n     * It is not ensured that the resolved workspace URI is valid, it can point\n     * to a non-existing location.\n     */\n    protected getDefaultWorkspaceUri(): MaybePromise<string | undefined> {\n        // Prefer the workspace path specified as the URL fragment, if present.\n        if (window.location.hash.length > 1) {\n            // Remove the leading # and decode the URI.\n            const wpPath = decodeURI(window.location.hash.substring(1));\n            return new URI().withPath(wpPath).withScheme('file').toString();\n        } else {\n            // Else, ask the server for its suggested workspace (usually the one\n            // specified on the CLI, or the most recent).\n            return this.server.getMostRecentlyUsedWorkspace();\n        }\n    }\n\n    /**\n     * Get the path of the workspace to use initially.\n     * @deprecated use `WorkspaceService#getDefaultWorkspaceUri` instead.\n     */\n    protected getDefaultWorkspacePath(): MaybePromise<string | undefined> {\n        return this.getDefaultWorkspaceUri();\n    }\n\n    /**\n     * Set the URL fragment to the given workspace path.\n     */\n    protected setURLFragment(workspacePath: string): void {\n        window.location.hash = workspacePath;\n    }\n\n    get roots(): Promise<FileStat[]> {\n        return this.deferredRoots.promise;\n    }\n    tryGetRoots(): FileStat[] {\n        return this._roots;\n    }\n    get workspace(): FileStat | undefined {\n        return this._workspace;\n    }\n\n    protected readonly onWorkspaceChangeEmitter = new Emitter<FileStat[]>();\n    get onWorkspaceChanged(): Event<FileStat[]> {\n        return this.onWorkspaceChangeEmitter.event;\n    }\n\n    protected readonly onWorkspaceLocationChangedEmitter = new Emitter<FileStat | undefined>();\n    get onWorkspaceLocationChanged(): Event<FileStat | undefined> {\n        return this.onWorkspaceLocationChangedEmitter.event;\n    }\n\n    protected readonly toDisposeOnWorkspace = new DisposableCollection();\n    protected async setWorkspace(workspaceStat: FileStat | undefined): Promise<void> {\n        if (FileStat.equals(this._workspace, workspaceStat)) {\n            return;\n        }\n        this.toDisposeOnWorkspace.dispose();\n        this._workspace = workspaceStat;\n        if (this._workspace) {\n            const uri = new URI(this._workspace.uri);\n            this.toDisposeOnWorkspace.push(await this.watcher.watchFileChanges(uri));\n            this.setURLFragment(uri.path.toString());\n        } else {\n            this.setURLFragment('');\n        }\n        this.updateTitle();\n        await this.updateWorkspace();\n    }\n\n    protected async updateWorkspace(): Promise<void> {\n        if (this._workspace) {\n            this.toFileStat(this._workspace.uri).then(stat => this._workspace = stat);\n        }\n        await this.updateRoots();\n        this.watchRoots();\n    }\n\n    protected async updateRoots(): Promise<void> {\n        const newRoots = await this.computeRoots();\n        let rootsChanged = false;\n        if (newRoots.length !== this._roots.length || newRoots.length === 0) {\n            rootsChanged = true;\n        } else {\n            for (const newRoot of newRoots) {\n                if (!this._roots.some(r => r.uri === newRoot.uri)) {\n                    rootsChanged = true;\n                    break;\n                }\n            }\n        }\n        if (rootsChanged) {\n            this._roots = newRoots;\n            this.deferredRoots.resolve(this._roots); // in order to resolve first\n            this.deferredRoots = new Deferred<FileStat[]>();\n            this.deferredRoots.resolve(this._roots);\n            this.onWorkspaceChangeEmitter.fire(this._roots);\n        }\n    }\n\n    protected async computeRoots(): Promise<FileStat[]> {\n        const roots: FileStat[] = [];\n        if (this._workspace) {\n            if (this._workspace.isDirectory) {\n                return [this._workspace];\n            }\n\n            const workspaceData = await this.getWorkspaceDataFromFile();\n            if (workspaceData) {\n                for (const { path } of workspaceData.folders) {\n                    const valid = await this.toValidRoot(path);\n                    if (valid) {\n                        roots.push(valid);\n                    } else {\n                        roots.push({\n                            uri: path,\n                            lastModification: Date.now(),\n                            isDirectory: true\n                        });\n                    }\n                }\n            }\n        }\n        return roots;\n    }\n\n    protected async getWorkspaceDataFromFile(): Promise<WorkspaceData | undefined> {\n        if (this._workspace && await this.fileSystem.exists(this._workspace.uri)) {\n            if (this._workspace.isDirectory) {\n                return {\n                    folders: [{ path: this._workspace.uri }]\n                };\n            }\n            const { stat, content } = await this.fileSystem.resolveContent(this._workspace.uri);\n            const strippedContent = jsoncparser.stripComments(content);\n            const data = jsoncparser.parse(strippedContent);\n            if (data && WorkspaceData.is(data)) {\n                return WorkspaceData.transformToAbsolute(data, stat);\n            }\n            this.logger.error(`Unable to retrieve workspace data from the file: '${this._workspace.uri}'. Please check if the file is corrupted.`);\n        }\n    }\n\n    protected formatTitle(title?: string): string {\n        const name = this.applicationName;\n        return title ? `${title} — ${name}` : name;\n    }\n\n    protected updateTitle(): void {\n        let title: string | undefined;\n        if (this._workspace) {\n            const uri = new URI(this._workspace.uri);\n            const displayName = uri.displayName;\n            if (!this._workspace.isDirectory &&\n                (displayName.endsWith(`.${THEIA_EXT}`) || displayName.endsWith(`.${VSCODE_EXT}`))) {\n                title = displayName.slice(0, displayName.lastIndexOf('.'));\n            } else {\n                title = displayName;\n            }\n        }\n        document.title = this.formatTitle(title);\n    }\n\n    /**\n     * on unload, we set our workspace root as the last recently used on the backend.\n     */\n    onStop(): void {\n        this.server.setMostRecentlyUsedWorkspace(this._workspace ? this._workspace.uri : '');\n    }\n\n    async recentWorkspaces(): Promise<string[]> {\n        return this.server.getRecentWorkspaces();\n    }\n\n    /**\n     * Returns `true` if theia has an opened workspace or folder\n     * @returns {boolean}\n     */\n    get opened(): boolean {\n        return !!this._workspace;\n    }\n\n    /**\n     * Returns `true` if a multiple-root workspace is currently open.\n     * @returns {boolean}\n     */\n    get isMultiRootWorkspaceOpened(): boolean {\n        return !!this.workspace && !this.workspace.isDirectory;\n    }\n\n    /**\n     * Returns `true` if there is an opened workspace, and multi root workspace support is enabled.\n     * @returns {boolean}\n     */\n    get isMultiRootWorkspaceEnabled(): boolean {\n        return this.opened && this.preferences['workspace.supportMultiRootWorkspace'];\n    }\n\n    /**\n     * Opens directory, or recreates a workspace from the file that `uri` points to.\n     */\n    open(uri: URI, options?: WorkspaceInput): void {\n        this.doOpen(uri, options);\n    }\n\n    protected async doOpen(uri: URI, options?: WorkspaceInput): Promise<void> {\n        const rootUri = uri.toString();\n        const stat = await this.toFileStat(rootUri);\n        if (stat) {\n            // The same window has to be preserved too (instead of opening a new one), if the workspace root is not yet available and we are setting it for the first time.\n            // Option passed as parameter has the highest priority (for api developers), then the preference, then the default.\n            await this.roots;\n            const { preserveWindow } = {\n                preserveWindow: this.preferences['workspace.preserveWindow'] || !this.opened,\n                ...options\n            };\n            await this.server.setMostRecentlyUsedWorkspace(rootUri);\n            if (preserveWindow) {\n                this._workspace = stat;\n            }\n            this.openWindow(stat, { preserveWindow });\n            return;\n        }\n        throw new Error('Invalid workspace root URI. Expected an existing directory location.');\n    }\n\n    /**\n     * Adds a root folder to the workspace\n     * @param uri URI of the root folder being added\n     */\n    async addRoot(uri: URI): Promise<void> {\n        await this.spliceRoots(this._roots.length, 0, uri);\n    }\n\n    /**\n     * Removes root folder(s) from workspace.\n     */\n    async removeRoots(uris: URI[]): Promise<void> {\n        if (!this.opened) {\n            throw new Error('Folder cannot be removed as there is no active folder in the current workspace.');\n        }\n        if (this._workspace) {\n            const workspaceData = await this.getWorkspaceDataFromFile();\n            this._workspace = await this.writeWorkspaceFile(this._workspace,\n                WorkspaceData.buildWorkspaceData(\n                    this._roots.filter(root => uris.findIndex(u => u.toString() === root.uri) < 0),\n                    workspaceData!.settings\n                )\n            );\n        }\n    }\n\n    async spliceRoots(start: number, deleteCount?: number, ...rootsToAdd: URI[]): Promise<URI[]> {\n        if (!this._workspace) {\n            throw new Error('There is not active workspace');\n        }\n        const dedup = new Set<string>();\n        const roots = this._roots.map(root => (dedup.add(root.uri), root.uri));\n        const toAdd: string[] = [];\n        for (const root of rootsToAdd) {\n            const uri = root.toString();\n            if (!dedup.has(uri)) {\n                dedup.add(uri);\n                toAdd.push(uri);\n            }\n        }\n        const toRemove = roots.splice(start, deleteCount || 0, ...toAdd);\n        if (!toRemove.length && !toAdd.length) {\n            return [];\n        }\n        if (this._workspace.isDirectory) {\n            const untitledWorkspace = await this.getUntitledWorkspace();\n            if (untitledWorkspace) {\n                await this.save(untitledWorkspace);\n            }\n        }\n        const currentData = await this.getWorkspaceDataFromFile();\n        const newData = WorkspaceData.buildWorkspaceData(roots, currentData && currentData.settings);\n        await this.writeWorkspaceFile(this._workspace, newData);\n        return toRemove.map(root => new URI(root));\n    }\n\n    protected async getUntitledWorkspace(): Promise<URI | undefined> {\n        return getTemporaryWorkspaceFileUri(this.envVariableServer);\n    }\n\n    private async writeWorkspaceFile(workspaceFile: FileStat | undefined, workspaceData: WorkspaceData): Promise<FileStat | undefined> {\n        if (workspaceFile) {\n            const data = JSON.stringify(WorkspaceData.transformToRelative(workspaceData, workspaceFile));\n            const edits = jsoncparser.format(data, undefined, { tabSize: 3, insertSpaces: true, eol: '' });\n            const result = jsoncparser.applyEdits(data, edits);\n            const stat = await this.fileSystem.setContent(workspaceFile, result);\n            return stat;\n        }\n    }\n\n    /**\n     * Clears current workspace root.\n     */\n    async close(): Promise<void> {\n        this._workspace = undefined;\n        this._roots.length = 0;\n\n        await this.server.setMostRecentlyUsedWorkspace('');\n        // this.reloadWindow();\n        window.location.href = '/';\n    }\n\n    /**\n     * returns a FileStat if the argument URI points to an existing directory. Otherwise, `undefined`.\n     */\n    protected async toValidRoot(uri: URI | string | undefined): Promise<FileStat | undefined> {\n        const fileStat = await this.toFileStat(uri);\n        if (fileStat && fileStat.isDirectory) {\n            return fileStat;\n        }\n        return undefined;\n    }\n\n    /**\n     * returns a FileStat if the argument URI points to a file or directory. Otherwise, `undefined`.\n     */\n    protected async toFileStat(uri: URI | string | undefined): Promise<FileStat | undefined> {\n        if (!uri) {\n            return undefined;\n        }\n        let uriStr = uri.toString();\n        try {\n            if (uriStr.endsWith('/')) {\n                uriStr = uriStr.slice(0, -1);\n            }\n            const fileStat = await this.fileSystem.getFileStat(uriStr);\n            if (!fileStat) {\n                return undefined;\n            }\n            return fileStat;\n        } catch (error) {\n            return undefined;\n        }\n    }\n\n    protected openWindow(uri: FileStat, options?: WorkspaceInput): void {\n        const workspacePath = new URI(uri.uri).path.toString();\n\n        if (this.shouldPreserveWindow(options)) {\n            this.reloadWindow();\n        } else {\n            try {\n                this.openNewWindow(workspacePath);\n            } catch (error) {\n                // Fall back to reloading the current window in case the browser has blocked the new window\n                this._workspace = uri;\n                this.logger.error(error.toString()).then(() => this.reloadWindow());\n            }\n        }\n    }\n\n    protected reloadWindow(): void {\n        // Set the new workspace path as the URL fragment.\n        if (this._workspace !== undefined) {\n            this.setURLFragment(new URI(this._workspace.uri).path.toString());\n        } else {\n            this.setURLFragment('');\n        }\n\n        window.location.reload(true);\n    }\n\n    protected openNewWindow(workspacePath: string): void {\n        const url = new URL(window.location.href);\n        url.hash = workspacePath;\n        this.windowService.openNewWindow(url.toString());\n    }\n\n    protected shouldPreserveWindow(options?: WorkspaceInput): boolean {\n        return options !== undefined && !!options.preserveWindow;\n    }\n\n    /**\n     * Return true if one of the paths in paths array is present in the workspace\n     * NOTE: You should always explicitly use `/` as the separator between the path segments.\n     */\n    async containsSome(paths: string[]): Promise<boolean> {\n        await this.roots;\n        if (this.opened) {\n            for (const root of this._roots) {\n                const uri = new URI(root.uri);\n                for (const path of paths) {\n                    const fileUri = uri.resolve(path).toString();\n                    const exists = await this.fileSystem.exists(fileUri);\n                    if (exists) {\n                        return exists;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n\n    get saved(): boolean {\n        return !!this._workspace && !this._workspace.isDirectory;\n    }\n\n    /**\n     * Save workspace data into a file\n     * @param uri URI or FileStat of the workspace file\n     */\n    async save(uri: URI | FileStat): Promise<void> {\n        const uriStr = uri instanceof URI ? uri.toString() : uri.uri;\n        if (!await this.fileSystem.exists(uriStr)) {\n            await this.fileSystem.createFile(uriStr);\n        }\n        const workspaceData: WorkspaceData = { folders: [], settings: {} };\n        if (!this.saved) {\n            for (const p of Object.keys(this.schemaProvider.getCombinedSchema().properties)) {\n                if (this.schemaProvider.isValidInScope(p, PreferenceScope.Folder)) {\n                    continue;\n                }\n                const preferences = this.preferenceImpl.inspect(p);\n                if (preferences && preferences.workspaceValue) {\n                    workspaceData.settings![p] = preferences.workspaceValue;\n                }\n            }\n        }\n        let stat = await this.toFileStat(uriStr);\n        Object.assign(workspaceData, await this.getWorkspaceDataFromFile());\n        stat = await this.writeWorkspaceFile(stat, WorkspaceData.buildWorkspaceData(this._roots, workspaceData ? workspaceData.settings : undefined));\n        await this.server.setMostRecentlyUsedWorkspace(uriStr);\n        await this.setWorkspace(stat);\n        this.onWorkspaceLocationChangedEmitter.fire(stat);\n    }\n\n    protected readonly rootWatchers = new Map<string, Disposable>();\n\n    protected async watchRoots(): Promise<void> {\n        const rootUris = new Set(this._roots.map(r => r.uri));\n        for (const [uri, watcher] of this.rootWatchers.entries()) {\n            if (!rootUris.has(uri)) {\n                watcher.dispose();\n            }\n        }\n        for (const root of this._roots) {\n            this.watchRoot(root);\n        }\n    }\n\n    protected async watchRoot(root: FileStat): Promise<void> {\n        const uriStr = root.uri;\n        if (this.rootWatchers.has(uriStr)) {\n            return;\n        }\n        const watcher = this.watcher.watchFileChanges(new URI(uriStr));\n        this.rootWatchers.set(uriStr, Disposable.create(() => {\n            watcher.then(disposable => disposable.dispose());\n            this.rootWatchers.delete(uriStr);\n        }));\n    }\n\n    /**\n     * Returns the workspace root uri that the given file belongs to.\n     * In case that the file is found in more than one workspace roots, returns the root that is closest to the file.\n     * If the file is not from the current workspace, returns `undefined`.\n     * @param uri URI of the file\n     */\n    getWorkspaceRootUri(uri: URI | undefined): URI | undefined {\n        if (!uri) {\n            const root = this.tryGetRoots()[0];\n            if (root) {\n                return new URI(root.uri);\n            }\n            return undefined;\n        }\n        const rootUris: URI[] = [];\n        for (const root of this.tryGetRoots()) {\n            const rootUri = new URI(root.uri);\n            if (rootUri && rootUri.isEqualOrParent(uri)) {\n                rootUris.push(rootUri);\n            }\n        }\n        return rootUris.sort((r1, r2) => r2.toString().length - r1.toString().length)[0];\n    }\n\n    areWorkspaceRoots(uris: URI[]): boolean {\n        if (!uris.length) {\n            return false;\n        }\n        const rootUris = new Set(this.tryGetRoots().map(root => root.uri));\n        return uris.every(uri => rootUris.has(uri.toString()));\n    }\n\n}\n\nexport interface WorkspaceInput {\n\n    /**\n     * Tests whether the same window should be used or a new one has to be opened after setting the workspace root. By default it is `false`.\n     */\n    preserveWindow?: boolean;\n\n}\n\nexport interface WorkspaceData {\n    folders: Array<{ path: string, name?: string }>;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    settings?: { [id: string]: any };\n}\n\nexport namespace WorkspaceData {\n    const validateSchema = new Ajv().compile({\n        type: 'object',\n        properties: {\n            folders: {\n                description: 'Root folders in the workspace',\n                type: 'array',\n                items: {\n                    type: 'object',\n                    properties: {\n                        path: {\n                            type: 'string',\n                        }\n                    },\n                    required: ['path']\n                }\n            },\n            settings: {\n                description: 'Workspace preferences',\n                type: 'object'\n            }\n        },\n        required: ['folders']\n    });\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    export function is(data: any): data is WorkspaceData {\n        return !!validateSchema(data);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    export function buildWorkspaceData(folders: string[] | FileStat[], settings: { [id: string]: any } | undefined): WorkspaceData {\n        let roots: string[] = [];\n        if (folders.length > 0) {\n            if (typeof folders[0] !== 'string') {\n                roots = (<FileStat[]>folders).map(folder => folder.uri);\n            } else {\n                roots = <string[]>folders;\n            }\n        }\n        const data: WorkspaceData = {\n            folders: roots.map(folder => ({ path: folder }))\n        };\n        if (settings) {\n            data.settings = settings;\n        }\n        return data;\n    }\n\n    export function transformToRelative(data: WorkspaceData, workspaceFile?: FileStat): WorkspaceData {\n        const folderUris: string[] = [];\n        const workspaceFileUri = new URI(workspaceFile ? workspaceFile.uri : '').withScheme('file');\n        for (const { path } of data.folders) {\n            const folderUri = new URI(path).withScheme('file');\n            const rel = workspaceFileUri.parent.relative(folderUri);\n            if (rel) {\n                folderUris.push(rel.toString());\n            } else {\n                folderUris.push(folderUri.toString());\n            }\n        }\n        return buildWorkspaceData(folderUris, data.settings);\n    }\n\n    export function transformToAbsolute(data: WorkspaceData, workspaceFile?: FileStat): WorkspaceData {\n        if (workspaceFile) {\n            const folders: string[] = [];\n            for (const folder of data.folders) {\n                const path = folder.path;\n                if (path.startsWith('file:///')) {\n                    folders.push(path);\n                } else {\n                    folders.push(new URI(workspaceFile.uri).withScheme('file').parent.resolve(path).toString());\n                }\n\n            }\n            return Object.assign(data, buildWorkspaceData(folders, data.settings));\n        }\n        return data;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from 'inversify';\nimport { LocalStorageService } from '@theia/core/lib/browser/storage-service';\nimport { StorageService } from '@theia/core/lib/browser/storage-service';\nimport { WorkspaceService } from './workspace-service';\nimport { FileStat } from '@theia/filesystem/lib/common';\n\n/*\n * Prefixes any stored data with the current workspace path.\n */\n@injectable()\nexport class WorkspaceStorageService implements StorageService {\n\n    private prefix: string;\n    private initialized: Promise<void>;\n\n    @inject(LocalStorageService) protected storageService: StorageService;\n    @inject(WorkspaceService) protected workspaceService: WorkspaceService;\n\n    @postConstruct()\n    protected init(): void {\n        this.initialized = this.workspaceService.roots.then(() => {\n            this.updatePrefix();\n            this.workspaceService.onWorkspaceLocationChanged(() => this.updatePrefix());\n        });\n    }\n\n    async setData<T>(key: string, data: T): Promise<void> {\n        if (!this.prefix) {\n            await this.initialized;\n        }\n        const fullKey = this.prefixWorkspaceURI(key);\n        return this.storageService.setData(fullKey, data);\n    }\n\n    async getData<T>(key: string, defaultValue?: T): Promise<T | undefined> {\n        await this.initialized;\n        const fullKey = this.prefixWorkspaceURI(key);\n        return this.storageService.getData(fullKey, defaultValue);\n    }\n\n    protected prefixWorkspaceURI(originalKey: string): string {\n        return `${this.prefix}:${originalKey}`;\n    }\n\n    protected getPrefix(workspaceStat: FileStat | undefined): string {\n        return workspaceStat ? workspaceStat.uri : '_global_';\n    }\n\n    private updatePrefix(): void {\n        this.prefix = this.getPrefix(this.workspaceService.workspace);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { DefaultUriLabelProviderContribution, URIIconReference } from '@theia/core/lib/browser/label-provider';\nimport URI from '@theia/core/lib/common/uri';\nimport { injectable, inject, postConstruct } from 'inversify';\nimport { FileStat } from '@theia/filesystem/lib/common';\nimport { WorkspaceVariableContribution } from './workspace-variable-contribution';\n\n@injectable()\nexport class WorkspaceUriLabelProviderContribution extends DefaultUriLabelProviderContribution {\n\n    @inject(WorkspaceVariableContribution)\n    protected readonly workspaceVariable: WorkspaceVariableContribution;\n\n    @postConstruct()\n    protected async init(): Promise<void> {\n        // no-op, backward compatibility\n    }\n\n    canHandle(element: object): number {\n        if ((element instanceof URI && element.scheme === 'file' || URIIconReference.is(element) || FileStat.is(element))) {\n            return 10;\n        }\n        return 0;\n    }\n\n    getIcon(element: URI | URIIconReference | FileStat): string {\n        return super.getIcon(this.asURIIconReference(element));\n    }\n\n    getName(element: URI | URIIconReference | FileStat): string | undefined {\n        return super.getName(this.asURIIconReference(element));\n    }\n\n    /**\n     * trims the workspace root from a file uri, if it is a child.\n     */\n    getLongName(element: URI | URIIconReference | FileStat): string | undefined {\n        const uri = this.getUri(element);\n        const relativePath = uri && this.workspaceVariable.getWorkspaceRelativePath(uri);\n        return relativePath || super.getLongName(this.asURIIconReference(element));\n    }\n\n    protected asURIIconReference(element: URI | URIIconReference | FileStat): URI | URIIconReference {\n        if (FileStat.is(element)) {\n            return URIIconReference.create(element.isDirectory ? 'folder' : 'file', new URI(element.uri));\n        }\n        return element;\n    }\n\n    protected getUri(element: URI | URIIconReference | FileStat): URI | undefined {\n        if (FileStat.is(element)) {\n            return new URI(element.uri);\n        }\n        return super.getUri(element);\n    }\n}\n","\n/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport URI from '@theia/core/lib/common/uri';\nimport { inject, injectable } from 'inversify';\nimport { WorkspaceService } from './workspace-service';\n\n/**\n * Collection of workspace utility functions\n * @class\n */\n@injectable()\nexport class WorkspaceUtils {\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    /**\n     * Determine if root directory exists\n     * for a given array of URIs\n     * @param uris\n     */\n    containsRootDirectory(uris: URI[]): boolean {\n        // obtain all roots URIs for a given workspace\n        const rootUris = this.workspaceService.tryGetRoots().map(root => new URI(root.uri));\n        // return true if at least a single URI is a root directory\n        return rootUris.some(rootUri => uris.some(uri => uri.isEqualOrParent(rootUri)));\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { Path } from '@theia/core/lib/common/path';\nimport { FileSystem } from '@theia/filesystem/lib/common';\nimport { Disposable, DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { ApplicationShell, NavigatableWidget } from '@theia/core/lib/browser';\nimport { VariableContribution, VariableRegistry, Variable } from '@theia/variable-resolver/lib/browser';\nimport { WorkspaceService } from './workspace-service';\n\n@injectable()\nexport class WorkspaceVariableContribution implements VariableContribution {\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n    @inject(ApplicationShell)\n    protected readonly shell: ApplicationShell;\n    @inject(FileSystem)\n    protected readonly fileSystem: FileSystem;\n\n    protected currentWidget: NavigatableWidget | undefined;\n\n    @postConstruct()\n    protected init(): void {\n        this.updateCurrentWidget();\n        this.shell.currentChanged.connect(() => this.updateCurrentWidget());\n    }\n    protected updateCurrentWidget(): void {\n        const { currentWidget } = this.shell;\n        if (NavigatableWidget.is(currentWidget)) {\n            this.setCurrentWidget(currentWidget);\n        }\n    }\n\n    protected readonly toDiposeOnUpdateCurrentWidget = new DisposableCollection();\n    protected setCurrentWidget(currentWidget: NavigatableWidget | undefined): void {\n        this.toDiposeOnUpdateCurrentWidget.dispose();\n        this.currentWidget = currentWidget;\n        if (currentWidget) {\n            const resetCurrentWidget = () => this.setCurrentWidget(undefined);\n            currentWidget.disposed.connect(resetCurrentWidget);\n            this.toDiposeOnUpdateCurrentWidget.push(Disposable.create(() =>\n                currentWidget.disposed.disconnect(resetCurrentWidget)\n            ));\n        }\n    }\n\n    registerVariables(variables: VariableRegistry): void {\n        this.registerWorkspaceRootVariables(variables);\n\n        variables.registerVariable({\n            name: 'file',\n            description: 'The path of the currently opened file',\n            resolve: () => {\n                const uri = this.getResourceUri();\n                return uri && this.fileSystem.getFsPath(uri.toString());\n            }\n        });\n        variables.registerVariable({\n            name: 'fileBasename',\n            description: 'The basename of the currently opened file',\n            resolve: () => {\n                const uri = this.getResourceUri();\n                return uri && uri.path.base;\n            }\n        });\n        variables.registerVariable({\n            name: 'fileBasenameNoExtension',\n            description: \"The currently opened file's name without extension\",\n            resolve: () => {\n                const uri = this.getResourceUri();\n                return uri && uri.path.name;\n            }\n        });\n        variables.registerVariable({\n            name: 'fileDirname',\n            description: \"The name of the currently opened file's directory\",\n            resolve: () => {\n                const uri = this.getResourceUri();\n                return uri && uri.path.dir.toString();\n            }\n        });\n        variables.registerVariable({\n            name: 'fileExtname',\n            description: 'The extension of the currently opened file',\n            resolve: () => {\n                const uri = this.getResourceUri();\n                return uri && uri.path.ext;\n            }\n        });\n    }\n\n    protected registerWorkspaceRootVariables(variables: VariableRegistry): void {\n        const scoped = (variable: Variable): Variable => ({\n            name: variable.name,\n            description: variable.description,\n            resolve: (context, workspaceRootName) => {\n                const workspaceRoot = workspaceRootName && this.workspaceService.tryGetRoots().find(r => new URI(r.uri).path.name === workspaceRootName);\n                return variable.resolve(workspaceRoot ? new URI(workspaceRoot.uri) : context);\n            }\n        });\n        variables.registerVariable(scoped({\n            name: 'workspaceRoot',\n            description: 'The path of the workspace root folder',\n            resolve: (context?: URI) => {\n                const uri = this.getWorkspaceRootUri(context);\n                return uri && this.fileSystem.getFsPath(uri.toString());\n            }\n        }));\n        variables.registerVariable(scoped({\n            name: 'workspaceFolder',\n            description: 'The path of the workspace root folder',\n            resolve: (context?: URI) => {\n                const uri = this.getWorkspaceRootUri(context);\n                return uri && this.fileSystem.getFsPath(uri.toString());\n            }\n        }));\n        variables.registerVariable(scoped({\n            name: 'workspaceRootFolderName',\n            description: 'The name of the workspace root folder',\n            resolve: (context?: URI) => {\n                const uri = this.getWorkspaceRootUri(context);\n                return uri && uri.displayName;\n            }\n        }));\n        variables.registerVariable(scoped({\n            name: 'workspaceFolderBasename',\n            description: 'The name of the workspace root folder',\n            resolve: (context?: URI) => {\n                const uri = this.getWorkspaceRootUri(context);\n                return uri && uri.displayName;\n            }\n        }));\n        variables.registerVariable(scoped({\n            name: 'cwd',\n            description: \"The task runner's current working directory on startup\",\n            resolve: (context?: URI) => {\n                const uri = this.getWorkspaceRootUri(context);\n                return (uri && this.fileSystem.getFsPath(uri.toString())) || '';\n            }\n        }));\n        variables.registerVariable(scoped({\n            name: 'relativeFile',\n            description: \"The currently opened file's path relative to the workspace root\",\n            resolve: (context?: URI) => {\n                const uri = this.getResourceUri();\n                return uri && this.getWorkspaceRelativePath(uri, context);\n            }\n        }));\n        variables.registerVariable(scoped({\n            name: 'relativeFileDirname',\n            description: \"The current opened file's dirname relative to ${workspaceFolder}\",\n            resolve: (context?: URI) => {\n                const uri = this.getResourceUri();\n                const relativePath = uri && this.getWorkspaceRelativePath(uri, context);\n                return relativePath && new Path(relativePath).dir.toString();\n            }\n        }));\n    }\n\n    getWorkspaceRootUri(uri: URI | undefined = this.getResourceUri()): URI | undefined {\n        return this.workspaceService.getWorkspaceRootUri(uri);\n    }\n\n    getResourceUri(): URI | undefined {\n        // TODO replace with ResourceContextKey.get?\n        return this.currentWidget && this.currentWidget.getResourceUri();\n    }\n\n    getWorkspaceRelativePath(uri: URI, context?: URI): string | undefined {\n        const workspaceRootUri = this.getWorkspaceRootUri(context || uri);\n        const path = workspaceRootUri && workspaceRootUri.path.relative(uri.path);\n        return path && path.toString();\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './workspace-protocol';\nexport * from './utils';\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport URI from '@theia/core/lib/common/uri';\nimport { EnvVariablesServer } from '@theia/core/lib/common/env-variables';\n\nexport const THEIA_EXT = 'theia-workspace';\nexport const VSCODE_EXT = 'code-workspace';\n\nexport async function getTemporaryWorkspaceFileUri(envVariableServer: EnvVariablesServer): Promise<URI> {\n    const configDirUri = await envVariableServer.getConfigDirUri();\n    return new URI(configDirUri).resolve(`Untitled.${THEIA_EXT}`);\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport const workspacePath = '/services/workspace';\n\n/**\n * The JSON-RPC workspace interface.\n */\nexport const WorkspaceServer = Symbol('WorkspaceServer');\nexport interface WorkspaceServer {\n\n    /**\n     * Returns with a promise that resolves to the most recently used workspace folder URI as a string.\n     * Resolves to `undefined` if the workspace folder is not yet set.\n     */\n    getMostRecentlyUsedWorkspace(): Promise<string | undefined>;\n\n    /**\n     * Sets the desired string representation of the URI as the most recently used workspace folder.\n     */\n    setMostRecentlyUsedWorkspace(uri: string): Promise<void>;\n\n    /**\n     * Returns list of recently opened workspaces as an array.\n     */\n    getRecentWorkspaces(): Promise<string[]>\n}\n"],"sourceRoot":""}