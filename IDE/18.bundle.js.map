{"version":3,"sources":["webpack:////home/elliott/playground/test/theia/packages/navigator/src/browser/navigator-context-key-service.ts","webpack:////home/elliott/playground/test/theia/packages/navigator/src/browser/navigator-contribution.ts","webpack:////home/elliott/playground/test/theia/packages/navigator/src/browser/navigator-diff.ts","webpack:////home/elliott/playground/test/theia/packages/navigator/src/browser/navigator-filter.ts","webpack:////home/elliott/playground/test/theia/packages/navigator/src/browser/navigator-keybinding-context.ts","webpack:////home/elliott/playground/test/theia/packages/navigator/src/browser/navigator-model.ts","webpack:////home/elliott/playground/test/theia/packages/navigator/src/browser/navigator-preferences.ts","webpack:////home/elliott/playground/test/theia/packages/navigator/src/browser/navigator-tree.ts","webpack:////home/elliott/playground/test/theia/packages/navigator/src/browser/navigator-widget.tsx"],"names":[],"mappings":"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","file":"18.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport { ContextKeyService, ContextKey } from '@theia/core/lib/browser/context-key-service';\n\n@injectable()\nexport class NavigatorContextKeyService {\n\n    @inject(ContextKeyService)\n    protected readonly contextKeyService: ContextKeyService;\n\n    protected _explorerViewletVisible: ContextKey<boolean>;\n    get explorerViewletVisible(): ContextKey<boolean> {\n        return this._explorerViewletVisible;\n    }\n\n    protected _explorerViewletFocus: ContextKey<boolean>;\n    /** True if Explorer view has keyboard focus. */\n    get explorerViewletFocus(): ContextKey<boolean> {\n        return this._explorerViewletFocus;\n    }\n\n    protected _filesExplorerFocus: ContextKey<boolean>;\n    /** True if File Explorer section has keyboard focus. */\n    get filesExplorerFocus(): ContextKey<boolean> {\n        return this._filesExplorerFocus;\n    }\n\n    protected _explorerResourceIsFolder: ContextKey<boolean>;\n    get explorerResourceIsFolder(): ContextKey<boolean> {\n        return this._explorerResourceIsFolder;\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this._explorerViewletVisible = this.contextKeyService.createKey<boolean>('explorerViewletVisible', false);\n        this._explorerViewletFocus = this.contextKeyService.createKey<boolean>('explorerViewletFocus', false);\n        this._filesExplorerFocus = this.contextKeyService.createKey<boolean>('filesExplorerFocus', false);\n        this._explorerResourceIsFolder = this.contextKeyService.createKey<boolean>('explorerResourceIsFolder', false);\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport { AbstractViewContribution } from '@theia/core/lib/browser/shell/view-contribution';\nimport {\n    Navigatable, SelectableTreeNode, Widget, KeybindingRegistry, CommonCommands,\n    OpenerService, FrontendApplicationContribution, FrontendApplication, CompositeTreeNode, PreferenceScope\n} from '@theia/core/lib/browser';\nimport { FileDownloadCommands } from '@theia/filesystem/lib/browser/download/file-download-command-contribution';\nimport { CommandRegistry, MenuModelRegistry, MenuPath, isOSX, Command, DisposableCollection, Mutable } from '@theia/core/lib/common';\nimport { SHELL_TABBAR_CONTEXT_MENU } from '@theia/core/lib/browser';\nimport { WorkspaceCommands, WorkspaceService, WorkspacePreferences } from '@theia/workspace/lib/browser';\nimport { FILE_NAVIGATOR_ID, FileNavigatorWidget, EXPLORER_VIEW_CONTAINER_ID } from './navigator-widget';\nimport { FileNavigatorPreferences } from './navigator-preferences';\nimport { NavigatorKeybindingContexts } from './navigator-keybinding-context';\nimport { FileNavigatorFilter } from './navigator-filter';\nimport { WorkspaceNode } from './navigator-tree';\nimport { NavigatorContextKeyService } from './navigator-context-key-service';\nimport { TabBarToolbarContribution, TabBarToolbarRegistry, TabBarToolbarItem } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { FileSystemCommands } from '@theia/filesystem/lib/browser/filesystem-frontend-contribution';\nimport { NavigatorDiff, NavigatorDiffCommands } from './navigator-diff';\nimport { UriSelection } from '@theia/core/lib/common/selection';\nimport { PreferenceService } from '@theia/core/lib/browser';\n\nexport namespace FileNavigatorCommands {\n    export const REVEAL_IN_NAVIGATOR: Command = {\n        id: 'navigator.reveal',\n        label: 'Reveal in Explorer'\n    };\n    export const TOGGLE_HIDDEN_FILES: Command = {\n        id: 'navigator.toggle.hidden.files',\n        label: 'Toggle Hidden Files'\n    };\n    export const TOGGLE_AUTO_REVEAL: Command = {\n        id: 'navigator.toggle.autoReveal',\n        category: 'File',\n        label: 'Auto Reveal'\n    };\n    export const REFRESH_NAVIGATOR: Command = {\n        id: 'navigator.refresh',\n        category: 'File',\n        label: 'Refresh in Explorer',\n        iconClass: 'refresh'\n    };\n    export const COLLAPSE_ALL: Command = {\n        id: 'navigator.collapse.all',\n        category: 'File',\n        label: 'Collapse Folders in Explorer',\n        iconClass: 'theia-collapse-all-icon'\n    };\n    export const ADD_ROOT_FOLDER: Command = {\n        id: 'navigator.addRootFolder'\n    };\n}\n\n/**\n * Navigator `More Actions...` toolbar item groups.\n * Used in order to group items present in the toolbar.\n */\nexport namespace NavigatorMoreToolbarGroups {\n    export const NEW_OPEN = '1_navigator_new_open';\n    export const TOOLS = '2_navigator_tools';\n    export const WORKSPACE = '3_navigator_workspace';\n}\n\nexport const NAVIGATOR_CONTEXT_MENU: MenuPath = ['navigator-context-menu'];\n\n/**\n * Navigator context menu default groups should be aligned\n * with VS Code default groups: https://code.visualstudio.com/api/references/contribution-points#contributes.menus\n */\nexport namespace NavigatorContextMenu {\n    export const NAVIGATION = [...NAVIGATOR_CONTEXT_MENU, 'navigation'];\n    /** @deprecated use NAVIGATION */\n    export const OPEN = NAVIGATION;\n    /** @deprecated use NAVIGATION */\n    export const NEW = NAVIGATION;\n\n    export const WORKSPACE = [...NAVIGATOR_CONTEXT_MENU, '2_workspace'];\n\n    export const COMPARE = [...NAVIGATOR_CONTEXT_MENU, '3_compare'];\n    /** @deprecated use COMPARE */\n    export const DIFF = COMPARE;\n\n    export const SEARCH = [...NAVIGATOR_CONTEXT_MENU, '4_search'];\n    export const CLIPBOARD = [...NAVIGATOR_CONTEXT_MENU, '5_cutcopypaste'];\n\n    export const MODIFICATION = [...NAVIGATOR_CONTEXT_MENU, '7_modification'];\n    /** @deprecated use MODIFICATION */\n    export const MOVE = MODIFICATION;\n    /** @deprecated use MODIFICATION */\n    export const ACTIONS = MODIFICATION;\n\n    export const OPEN_WITH = [...NAVIGATION, 'open_with'];\n}\n\n@injectable()\nexport class FileNavigatorContribution extends AbstractViewContribution<FileNavigatorWidget> implements FrontendApplicationContribution, TabBarToolbarContribution {\n\n    @inject(CommandRegistry)\n    protected readonly commandRegistry: CommandRegistry;\n\n    @inject(TabBarToolbarRegistry)\n    protected readonly tabbarToolbarRegistry: TabBarToolbarRegistry;\n\n    @inject(NavigatorContextKeyService)\n    protected readonly contextKeyService: NavigatorContextKeyService;\n\n    @inject(MenuModelRegistry)\n    protected readonly menuRegistry: MenuModelRegistry;\n\n    @inject(NavigatorDiff)\n    protected readonly navigatorDiff: NavigatorDiff;\n\n    @inject(PreferenceService)\n    protected readonly preferenceService: PreferenceService;\n\n    constructor(\n        @inject(FileNavigatorPreferences) protected readonly fileNavigatorPreferences: FileNavigatorPreferences,\n        @inject(OpenerService) protected readonly openerService: OpenerService,\n        @inject(FileNavigatorFilter) protected readonly fileNavigatorFilter: FileNavigatorFilter,\n        @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService,\n        @inject(WorkspacePreferences) protected readonly workspacePreferences: WorkspacePreferences\n    ) {\n        super({\n            viewContainerId: EXPLORER_VIEW_CONTAINER_ID,\n            widgetId: FILE_NAVIGATOR_ID,\n            widgetName: 'Explorer',\n            defaultWidgetOptions: {\n                area: 'left',\n                rank: 100\n            },\n            toggleCommandId: 'fileNavigator:toggle',\n            toggleKeybinding: 'ctrlcmd+shift+e'\n        });\n    }\n\n    @postConstruct()\n    protected async init(): Promise<void> {\n        await this.fileNavigatorPreferences.ready;\n        this.shell.currentChanged.connect(() => this.onCurrentWidgetChangedHandler());\n\n        const updateFocusContextKeys = () => {\n            const hasFocus = this.shell.activeWidget instanceof FileNavigatorWidget;\n            this.contextKeyService.explorerViewletFocus.set(hasFocus);\n            this.contextKeyService.filesExplorerFocus.set(hasFocus);\n        };\n        updateFocusContextKeys();\n        this.shell.activeChanged.connect(updateFocusContextKeys);\n    }\n\n    async onStart(app: FrontendApplication): Promise<void> {\n        this.workspacePreferences.ready.then(() => {\n            this.updateAddRemoveFolderActions(this.menuRegistry);\n            this.workspacePreferences.onPreferenceChanged(change => {\n                if (change.preferenceName === 'workspace.supportMultiRootWorkspace') {\n                    this.updateAddRemoveFolderActions(this.menuRegistry);\n                }\n            });\n        });\n    }\n\n    async initializeLayout(app: FrontendApplication): Promise<void> {\n        await this.openView({ activate: true, reveal: true });\n    }\n\n    registerCommands(registry: CommandRegistry): void {\n        super.registerCommands(registry);\n        registry.registerCommand(FileNavigatorCommands.REVEAL_IN_NAVIGATOR, {\n            execute: () => this.openView({ activate: true }).then(() => this.selectWidgetFileNode(this.shell.currentWidget)),\n            isEnabled: () => Navigatable.is(this.shell.currentWidget),\n            isVisible: () => Navigatable.is(this.shell.currentWidget)\n        });\n        registry.registerCommand(FileNavigatorCommands.TOGGLE_HIDDEN_FILES, {\n            execute: () => {\n                this.fileNavigatorFilter.toggleHiddenFiles();\n            },\n            isEnabled: () => true,\n            isVisible: () => true\n        });\n        registry.registerCommand(FileNavigatorCommands.TOGGLE_AUTO_REVEAL, {\n            isEnabled: widget => this.withWidget(widget, () => this.workspaceService.opened),\n            isVisible: widget => this.withWidget(widget, () => this.workspaceService.opened),\n            execute: () => {\n                const autoReveal = !this.fileNavigatorPreferences['explorer.autoReveal'];\n                this.preferenceService.set('explorer.autoReveal', autoReveal, PreferenceScope.User);\n                if (autoReveal) {\n                    this.selectWidgetFileNode(this.shell.currentWidget);\n                }\n            },\n            isToggled: () => this.fileNavigatorPreferences['explorer.autoReveal']\n        });\n        registry.registerCommand(FileNavigatorCommands.COLLAPSE_ALL, {\n            execute: widget => this.withWidget(widget, () => this.collapseFileNavigatorTree()),\n            isEnabled: widget => this.withWidget(widget, () => this.workspaceService.opened),\n            isVisible: widget => this.withWidget(widget, () => this.workspaceService.opened)\n        });\n        registry.registerCommand(FileNavigatorCommands.REFRESH_NAVIGATOR, {\n            execute: widget => this.withWidget(widget, () => this.refreshWorkspace()),\n            isEnabled: widget => this.withWidget(widget, () => this.workspaceService.opened),\n            isVisible: widget => this.withWidget(widget, () => this.workspaceService.opened)\n        });\n        registry.registerCommand(FileNavigatorCommands.ADD_ROOT_FOLDER, {\n            execute: (...args) => registry.executeCommand(WorkspaceCommands.ADD_FOLDER.id, ...args),\n            isEnabled: (...args) => registry.isEnabled(WorkspaceCommands.ADD_FOLDER.id, ...args),\n            isVisible: (...args) => {\n                if (!registry.isVisible(WorkspaceCommands.ADD_FOLDER.id, ...args)) {\n                    return false;\n                }\n                const navigator = this.tryGetWidget();\n                const model = navigator && navigator.model;\n                const uris = UriSelection.getUris(model && model.selectedNodes);\n                return this.workspaceService.areWorkspaceRoots(uris);\n            }\n        });\n\n        registry.registerCommand(NavigatorDiffCommands.COMPARE_FIRST, {\n            execute: () => {\n                this.navigatorDiff.addFirstComparisonFile();\n            },\n            isEnabled: () => true,\n            isVisible: () => true\n        });\n        registry.registerCommand(NavigatorDiffCommands.COMPARE_SECOND, {\n            execute: () => {\n                this.navigatorDiff.compareFiles();\n            },\n            isEnabled: () => this.navigatorDiff.isFirstFileSelected,\n            isVisible: () => this.navigatorDiff.isFirstFileSelected\n        });\n    }\n\n    protected withWidget<T>(widget: Widget | undefined = this.tryGetWidget(), cb: (navigator: FileNavigatorWidget) => T): T | false {\n        if (widget instanceof FileNavigatorWidget && widget.id === FILE_NAVIGATOR_ID) {\n            return cb(widget);\n        }\n        return false;\n    }\n\n    registerMenus(registry: MenuModelRegistry): void {\n        super.registerMenus(registry);\n        registry.registerMenuAction(SHELL_TABBAR_CONTEXT_MENU, {\n            commandId: FileNavigatorCommands.REVEAL_IN_NAVIGATOR.id,\n            label: FileNavigatorCommands.REVEAL_IN_NAVIGATOR.label,\n            order: '5'\n        });\n\n        registry.registerMenuAction(NavigatorContextMenu.NAVIGATION, {\n            commandId: CommonCommands.OPEN.id\n        });\n        registry.registerSubmenu(NavigatorContextMenu.OPEN_WITH, 'Open With');\n        this.openerService.getOpeners().then(openers => {\n            for (const opener of openers) {\n                const openWithCommand = WorkspaceCommands.FILE_OPEN_WITH(opener);\n                registry.registerMenuAction(NavigatorContextMenu.OPEN_WITH, {\n                    commandId: openWithCommand.id,\n                    label: opener.label,\n                    icon: opener.iconClass\n                });\n            }\n        });\n\n        // registry.registerMenuAction([CONTEXT_MENU_PATH, CUT_MENU_GROUP], {\n        //     commandId: Commands.FILE_CUT\n        // });\n\n        registry.registerMenuAction(NavigatorContextMenu.CLIPBOARD, {\n            commandId: CommonCommands.COPY.id,\n            order: 'a'\n        });\n        registry.registerMenuAction(NavigatorContextMenu.CLIPBOARD, {\n            commandId: CommonCommands.PASTE.id,\n            order: 'b'\n        });\n        registry.registerMenuAction(NavigatorContextMenu.CLIPBOARD, {\n            commandId: FileDownloadCommands.COPY_DOWNLOAD_LINK.id,\n            order: 'z'\n        });\n\n        registry.registerMenuAction(NavigatorContextMenu.MODIFICATION, {\n            commandId: WorkspaceCommands.FILE_RENAME.id\n        });\n        registry.registerMenuAction(NavigatorContextMenu.MODIFICATION, {\n            commandId: WorkspaceCommands.FILE_DELETE.id\n        });\n        registry.registerMenuAction(NavigatorContextMenu.MODIFICATION, {\n            commandId: WorkspaceCommands.FILE_DUPLICATE.id\n        });\n\n        const downloadUploadMenu = [...NAVIGATOR_CONTEXT_MENU, '6_downloadupload'];\n        registry.registerMenuAction(downloadUploadMenu, {\n            commandId: FileSystemCommands.UPLOAD.id,\n            order: 'a'\n        });\n        registry.registerMenuAction(downloadUploadMenu, {\n            commandId: FileDownloadCommands.DOWNLOAD.id,\n            order: 'b'\n        });\n\n        registry.registerMenuAction(NavigatorContextMenu.NAVIGATION, {\n            commandId: WorkspaceCommands.NEW_FILE.id\n        });\n        registry.registerMenuAction(NavigatorContextMenu.NAVIGATION, {\n            commandId: WorkspaceCommands.NEW_FOLDER.id\n        });\n        registry.registerMenuAction(NavigatorContextMenu.COMPARE, {\n            commandId: WorkspaceCommands.FILE_COMPARE.id\n        });\n        registry.registerMenuAction(NavigatorContextMenu.MODIFICATION, {\n            commandId: FileNavigatorCommands.COLLAPSE_ALL.id,\n            label: 'Collapse All',\n            order: 'z2'\n        });\n\n        registry.registerMenuAction(NavigatorContextMenu.COMPARE, {\n            commandId: NavigatorDiffCommands.COMPARE_FIRST.id,\n            order: 'z'\n        });\n        registry.registerMenuAction(NavigatorContextMenu.COMPARE, {\n            commandId: NavigatorDiffCommands.COMPARE_SECOND.id,\n            order: 'z'\n        });\n    }\n\n    registerKeybindings(registry: KeybindingRegistry): void {\n        super.registerKeybindings(registry);\n        registry.registerKeybinding({\n            command: FileNavigatorCommands.REVEAL_IN_NAVIGATOR.id,\n            keybinding: 'alt+r'\n        });\n\n        registry.registerKeybinding({\n            command: WorkspaceCommands.FILE_DELETE.id,\n            keybinding: 'del',\n            context: NavigatorKeybindingContexts.navigatorActive\n        });\n        if (isOSX) {\n            registry.registerKeybinding({\n                command: WorkspaceCommands.FILE_DELETE.id,\n                keybinding: 'cmd+backspace',\n                context: NavigatorKeybindingContexts.navigatorActive\n            });\n        }\n\n        registry.registerKeybinding({\n            command: WorkspaceCommands.FILE_RENAME.id,\n            keybinding: 'f2',\n            context: NavigatorKeybindingContexts.navigatorActive\n        });\n\n        registry.registerKeybinding({\n            command: FileNavigatorCommands.TOGGLE_HIDDEN_FILES.id,\n            keybinding: 'ctrlcmd+i',\n            context: NavigatorKeybindingContexts.navigatorActive\n        });\n    }\n\n    async registerToolbarItems(toolbarRegistry: TabBarToolbarRegistry): Promise<void> {\n        toolbarRegistry.registerItem({\n            id: FileNavigatorCommands.REFRESH_NAVIGATOR.id,\n            command: FileNavigatorCommands.REFRESH_NAVIGATOR.id,\n            tooltip: 'Refresh Explorer',\n            priority: 0,\n        });\n        toolbarRegistry.registerItem({\n            id: FileNavigatorCommands.COLLAPSE_ALL.id,\n            command: FileNavigatorCommands.COLLAPSE_ALL.id,\n            tooltip: 'Collapse All',\n            priority: 1,\n        });\n        this.registerMoreToolbarItem({\n            id: WorkspaceCommands.NEW_FILE.id,\n            command: WorkspaceCommands.NEW_FILE.id,\n            tooltip: WorkspaceCommands.NEW_FILE.label,\n            group: NavigatorMoreToolbarGroups.NEW_OPEN,\n        });\n        this.registerMoreToolbarItem({\n            id: WorkspaceCommands.NEW_FOLDER.id,\n            command: WorkspaceCommands.NEW_FOLDER.id,\n            tooltip: WorkspaceCommands.NEW_FOLDER.label,\n            group: NavigatorMoreToolbarGroups.NEW_OPEN,\n        });\n        this.registerMoreToolbarItem({\n            id: FileNavigatorCommands.TOGGLE_AUTO_REVEAL.id,\n            command: FileNavigatorCommands.TOGGLE_AUTO_REVEAL.id,\n            tooltip: FileNavigatorCommands.TOGGLE_AUTO_REVEAL.label,\n            group: NavigatorMoreToolbarGroups.TOOLS,\n        });\n        this.registerMoreToolbarItem({\n            id: WorkspaceCommands.ADD_FOLDER.id,\n            command: WorkspaceCommands.ADD_FOLDER.id,\n            tooltip: WorkspaceCommands.ADD_FOLDER.label,\n            group: NavigatorMoreToolbarGroups.WORKSPACE,\n        });\n    }\n\n    /**\n     * Register commands to the `More Actions...` navigator toolbar item.\n     */\n    public registerMoreToolbarItem = (item: Mutable<TabBarToolbarItem>) => {\n        const commandId = item.command;\n        const id = 'navigator.tabbar.toolbar.' + commandId;\n        const command = this.commandRegistry.getCommand(commandId);\n        this.commandRegistry.registerCommand({ id, iconClass: command && command.iconClass }, {\n            execute: (w, ...args) => w instanceof FileNavigatorWidget\n                && this.commandRegistry.executeCommand(commandId, ...args),\n            isEnabled: (w, ...args) => w instanceof FileNavigatorWidget\n                && this.commandRegistry.isEnabled(commandId, ...args),\n            isVisible: (w, ...args) => w instanceof FileNavigatorWidget\n                && this.commandRegistry.isVisible(commandId, ...args),\n            isToggled: (w, ...args) => w instanceof FileNavigatorWidget\n                && this.commandRegistry.isToggled(commandId, ...args),\n        });\n        item.command = id;\n        this.tabbarToolbarRegistry.registerItem(item);\n    };\n\n    /**\n     * Reveals and selects node in the file navigator to which given widget is related.\n     * Does nothing if given widget undefined or doesn't have related resource.\n     *\n     * @param widget widget file resource of which should be revealed and selected\n     */\n    async selectWidgetFileNode(widget: Widget | undefined): Promise<void> {\n        if (Navigatable.is(widget)) {\n            const resourceUri = widget.getResourceUri();\n            if (resourceUri) {\n                const { model } = await this.widget;\n                const node = await model.revealFile(resourceUri);\n                if (SelectableTreeNode.is(node)) {\n                    model.selectNode(node);\n                }\n            }\n        }\n    }\n\n    protected onCurrentWidgetChangedHandler(): void {\n        if (this.fileNavigatorPreferences['explorer.autoReveal']) {\n            this.selectWidgetFileNode(this.shell.currentWidget);\n        }\n    }\n\n    /**\n     * Collapse file navigator nodes and set focus on first visible node\n     * - single root workspace: collapse all nodes except root\n     * - multiple root workspace: collapse all nodes, even roots\n     */\n    async collapseFileNavigatorTree(): Promise<void> {\n        const { model } = await this.widget;\n\n        // collapse all child nodes which are not the root (single root workspace)\n        // collapse all root nodes (multiple root workspace)\n        let root = model.root as CompositeTreeNode;\n        if (WorkspaceNode.is(root) && root.children.length === 1) {\n            root = root.children[0];\n        }\n        root.children.forEach(child => CompositeTreeNode.is(child) && model.collapseAll(child));\n\n        // select first visible node\n        const firstChild = WorkspaceNode.is(root) ? root.children[0] : root;\n        if (SelectableTreeNode.is(firstChild)) {\n            model.selectNode(firstChild);\n        }\n    }\n\n    /**\n     * force refresh workspace in navigator\n     */\n    async refreshWorkspace(): Promise<void> {\n        const { model } = await this.widget;\n        await model.refresh();\n    }\n\n    private readonly toDisposeAddRemoveFolderActions = new DisposableCollection();\n    private updateAddRemoveFolderActions(registry: MenuModelRegistry): void {\n        this.toDisposeAddRemoveFolderActions.dispose();\n        if (this.workspacePreferences['workspace.supportMultiRootWorkspace']) {\n            this.toDisposeAddRemoveFolderActions.push(registry.registerMenuAction(NavigatorContextMenu.WORKSPACE, {\n                commandId: FileNavigatorCommands.ADD_ROOT_FOLDER.id,\n                label: WorkspaceCommands.ADD_FOLDER.label!\n            }));\n            this.toDisposeAddRemoveFolderActions.push(registry.registerMenuAction(NavigatorContextMenu.WORKSPACE, {\n                commandId: WorkspaceCommands.REMOVE_FOLDER.id\n            }));\n        }\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2019 David Saunders and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { FileSystem } from '@theia/filesystem/lib/common/filesystem';\nimport { SelectionService, UriSelection } from '@theia/core/lib/common';\nimport { OpenerService, open } from '@theia/core/lib/browser/opener-service';\nimport { MessageService } from '@theia/core/lib/common/message-service';\nimport { Command } from '@theia/core/lib/common/command';\nimport { DiffUris } from '@theia/core/lib/browser/diff-uris';\n\nexport namespace NavigatorDiffCommands {\n    const COMPARE_CATEGORY = 'Compare';\n    export const COMPARE_FIRST: Command = {\n        id: 'compare:first',\n        category: COMPARE_CATEGORY,\n        label: 'Select for Compare'\n    };\n    export const COMPARE_SECOND: Command = {\n        id: 'compare:second',\n        category: COMPARE_CATEGORY,\n        label: 'Compare with Selected'\n    };\n}\n\n@injectable()\nexport class NavigatorDiff {\n    @inject(FileSystem)\n    protected readonly fileSystem: FileSystem;\n\n    @inject(OpenerService)\n    protected openerService: OpenerService;\n\n    @inject(MessageService)\n    protected readonly notifications: MessageService;\n\n    @inject(SelectionService)\n    protected readonly selectionService: SelectionService;\n\n    constructor(\n    ) {\n    }\n\n    protected _firstCompareFile: URI | undefined = undefined;\n    protected get firstCompareFile(): URI | undefined {\n        return this._firstCompareFile;\n    }\n    protected set firstCompareFile(uri: URI | undefined) {\n        this._firstCompareFile = uri;\n        this._isFirstFileSelected = true;\n    }\n\n    protected _isFirstFileSelected: boolean;\n    get isFirstFileSelected(): boolean {\n        return this._isFirstFileSelected;\n    }\n\n    protected async isDirectory(uri: URI): Promise<boolean> {\n        try {\n            const stat = await this.fileSystem.getFileStat(uri.path.toString());\n            if (!stat || stat.isDirectory) {\n                return true;\n            }\n        } catch (e) {\n        }\n\n        return false;\n    }\n\n    protected async getURISelection(): Promise<URI | undefined> {\n        const uri = UriSelection.getUri(this.selectionService.selection);\n        if (!uri) {\n            return undefined;\n        }\n\n        if (await this.isDirectory(uri)) {\n            return undefined;\n        }\n\n        return uri;\n    }\n\n    /**\n     * Adds the initial file for comparison\n     * @see SelectionService\n     * @see compareFiles\n     * @returns Promise<boolean> indicating whether the uri is valid\n     */\n    async addFirstComparisonFile(): Promise<boolean> {\n        const uriSelected = await this.getURISelection();\n\n        if (uriSelected === undefined) {\n            return false;\n        }\n\n        this.firstCompareFile = uriSelected;\n\n        return true;\n    }\n\n    /**\n     * Compare selected files.  First file is selected through addFirstComparisonFile\n     * @see SelectionService\n     * @see addFirstComparisonFile\n     * @returns Promise<boolean> indicating whether the comparison was completed successfully\n     */\n    async compareFiles(): Promise<boolean> {\n        const uriSelected = await this.getURISelection();\n\n        if (this.firstCompareFile === undefined || uriSelected === undefined) {\n            return false;\n        }\n        const diffUri = DiffUris.encode(this.firstCompareFile, uriSelected);\n\n        open(this.openerService, diffUri).catch(e => {\n            this.notifications.error(e.message);\n        });\n        return true;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from 'inversify';\nimport { Minimatch } from 'minimatch';\nimport { MaybePromise } from '@theia/core/lib/common/types';\nimport { Event, Emitter } from '@theia/core/lib/common/event';\nimport { PreferenceChangeEvent } from '@theia/core/lib/browser/preferences';\nimport { FileSystemPreferences, FileSystemConfiguration } from '@theia/filesystem/lib/browser/filesystem-preferences';\nimport { FileNavigatorPreferences, FileNavigatorConfiguration } from './navigator-preferences';\n\n/**\n * Filter for omitting elements from the navigator. For more details on the exclusion patterns,\n * one should check either the manual with `man 5 gitignore` or just [here](https://git-scm.com/docs/gitignore).\n */\n@injectable()\nexport class FileNavigatorFilter {\n    protected readonly emitter: Emitter<void> = new Emitter<void>();\n\n    protected filterPredicate: FileNavigatorFilter.Predicate;\n    protected showHiddenFiles: boolean;\n\n    @inject(FileSystemPreferences)\n    protected readonly filesPreferences: FileSystemPreferences;\n\n    constructor(\n        @inject(FileNavigatorPreferences) protected readonly preferences: FileNavigatorPreferences\n    ) { }\n\n    @postConstruct()\n    protected async init(): Promise<void> {\n        this.filterPredicate = this.createFilterPredicate(this.filesPreferences['files.exclude']);\n        this.filesPreferences.onPreferenceChanged(event => this.onFilesPreferenceChanged(event));\n        this.preferences.onPreferenceChanged(event => this.onPreferenceChanged(event));\n    }\n\n    async filter<T extends { id: string }>(items: MaybePromise<T[]>): Promise<T[]> {\n        return (await items).filter(item => this.filterItem(item));\n    }\n\n    get onFilterChanged(): Event<void> {\n        return this.emitter.event;\n    }\n\n    protected filterItem(item: { id: string }): boolean {\n        return this.filterPredicate.filter(item);\n    }\n\n    protected fireFilterChanged(): void {\n        this.emitter.fire(undefined);\n    }\n\n    protected onFilesPreferenceChanged(event: PreferenceChangeEvent<FileSystemConfiguration>): void {\n        const { preferenceName, newValue } = event;\n        if (preferenceName === 'files.exclude') {\n            this.filterPredicate = this.createFilterPredicate(newValue as FileNavigatorFilter.Exclusions | undefined || {});\n            this.fireFilterChanged();\n        }\n    }\n\n    protected onPreferenceChanged(event: PreferenceChangeEvent<FileNavigatorConfiguration>): void {\n    }\n\n    protected createFilterPredicate(exclusions: FileNavigatorFilter.Exclusions): FileNavigatorFilter.Predicate {\n        return new FileNavigatorFilterPredicate(this.interceptExclusions(exclusions));\n    }\n\n    toggleHiddenFiles(): void {\n        this.showHiddenFiles = !this.showHiddenFiles;\n        const filesExcludes = this.filesPreferences['files.exclude'];\n\n        this.filterPredicate = this.createFilterPredicate(filesExcludes || {});\n        this.fireFilterChanged();\n    }\n\n    protected interceptExclusions(exclusions: FileNavigatorFilter.Exclusions): FileNavigatorFilter.Exclusions {\n        return {\n            ...exclusions,\n            '**/.*': this.showHiddenFiles\n        };\n    }\n\n}\n\nexport namespace FileNavigatorFilter {\n\n    /**\n     * File navigator filter predicate.\n     */\n    export interface Predicate {\n\n        /**\n         * Returns `true` if the item should filtered our from the navigator. Otherwise, `true`.\n         *\n         * @param item the identifier of a tree node.\n         */\n        filter(item: { id: string }): boolean;\n\n    }\n\n    export namespace Predicate {\n\n        /**\n         * Wraps a bunch of predicates and returns with a new one that evaluates to `true` if\n         * each of the wrapped predicates evaluates to `true`. Otherwise, `false`.\n         */\n        export function and(...predicates: Predicate[]): Predicate {\n            return {\n                filter: id => predicates.every(predicate => predicate.filter(id))\n            };\n        }\n\n    }\n\n    /**\n     * Type for the exclusion patterns. The property keys are the patterns, values are whether the exclusion is enabled or not.\n     */\n    export interface Exclusions {\n        [key: string]: boolean;\n    }\n\n}\n\n/**\n * Concrete filter navigator filter predicate that is decoupled from the preferences.\n */\nexport class FileNavigatorFilterPredicate implements FileNavigatorFilter.Predicate {\n\n    private readonly delegate: FileNavigatorFilter.Predicate;\n\n    constructor(exclusions: FileNavigatorFilter.Exclusions) {\n        const patterns = Object.keys(exclusions).map(pattern => ({ pattern, enabled: exclusions[pattern] })).filter(object => object.enabled).map(object => object.pattern);\n        this.delegate = FileNavigatorFilter.Predicate.and(...patterns.map(pattern => this.createDelegate(pattern)));\n    }\n\n    filter(item: { id: string }): boolean {\n        return this.delegate.filter(item);\n    }\n\n    protected createDelegate(pattern: string): FileNavigatorFilter.Predicate {\n        const delegate = new Minimatch(pattern, { matchBase: true });\n        return {\n            filter: item => !delegate.match(item.id)\n        };\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { KeybindingContext, ApplicationShell } from '@theia/core/lib/browser';\nimport { FileNavigatorWidget } from './navigator-widget';\n\nexport namespace NavigatorKeybindingContexts {\n    export const navigatorActive = 'navigatorActive';\n}\n\n@injectable()\nexport class NavigatorActiveContext implements KeybindingContext {\n\n    readonly id: string = NavigatorKeybindingContexts.navigatorActive;\n\n    @inject(ApplicationShell)\n    protected readonly applicationShell: ApplicationShell;\n\n    isEnabled(): boolean {\n        return this.applicationShell.activeWidget instanceof FileNavigatorWidget;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { FileNode, FileTreeModel } from '@theia/filesystem/lib/browser';\nimport { OpenerService, open, TreeNode, ExpandableTreeNode, CompositeTreeNode, SelectableTreeNode } from '@theia/core/lib/browser';\nimport { FileNavigatorTree, WorkspaceRootNode, WorkspaceNode } from './navigator-tree';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { FrontendApplicationStateService } from '@theia/core/lib/browser/frontend-application-state';\n\n@injectable()\nexport class FileNavigatorModel extends FileTreeModel {\n\n    @inject(OpenerService) protected readonly openerService: OpenerService;\n    @inject(FileNavigatorTree) protected readonly tree: FileNavigatorTree;\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(FrontendApplicationStateService) protected readonly applicationState: FrontendApplicationStateService;\n\n    @postConstruct()\n    protected init(): void {\n        super.init();\n        this.initializeRoot();\n    }\n\n    protected async initializeRoot(): Promise<void> {\n        await Promise.all([\n            this.applicationState.reachedState('initialized_layout'),\n            this.workspaceService.roots\n        ]);\n        await this.updateRoot();\n        if (this.toDispose.disposed) {\n            return;\n        }\n        this.toDispose.push(this.workspaceService.onWorkspaceChanged(() => this.updateRoot()));\n        this.toDispose.push(this.workspaceService.onWorkspaceLocationChanged(() => this.updateRoot()));\n        if (this.selectedNodes.length) {\n            return;\n        }\n        const root = this.root;\n        if (CompositeTreeNode.is(root) && root.children.length === 1) {\n            const child = root.children[0];\n            if (SelectableTreeNode.is(child) && !child.selected && ExpandableTreeNode.is(child)) {\n                this.selectNode(child);\n                this.expandNode(child);\n            }\n        }\n    }\n\n    previewNode(node: TreeNode): void {\n        if (FileNode.is(node)) {\n            open(this.openerService, node.uri, { mode: 'reveal', preview: true });\n        }\n    }\n\n    protected doOpenNode(node: TreeNode): void {\n        if (FileNode.is(node)) {\n            open(this.openerService, node.uri);\n        } else {\n            super.doOpenNode(node);\n        }\n    }\n\n    *getNodesByUri(uri: URI): IterableIterator<TreeNode> {\n        const workspace = this.root;\n        if (WorkspaceNode.is(workspace)) {\n            for (const root of workspace.children) {\n                const id = this.tree.createId(root, uri);\n                const node = this.getNode(id);\n                if (node) {\n                    yield node;\n                }\n            }\n        }\n    }\n\n    protected async updateRoot(): Promise<void> {\n        this.root = await this.createRoot();\n    }\n\n    protected async createRoot(): Promise<TreeNode | undefined> {\n        if (this.workspaceService.opened) {\n            const stat = this.workspaceService.workspace;\n            const isMulti = (stat) ? !stat.isDirectory : false;\n            const workspaceNode = isMulti\n                ? this.createMultipleRootNode()\n                : WorkspaceNode.createRoot();\n            const roots = await this.workspaceService.roots;\n            for (const root of roots) {\n                workspaceNode.children.push(\n                    await this.tree.createWorkspaceRoot(root, workspaceNode)\n                );\n            }\n            return workspaceNode;\n        }\n    }\n\n    /**\n     * Create multiple root node used to display\n     * the multiple root workspace name.\n     *\n     * @returns `WorkspaceNode`\n     */\n    protected createMultipleRootNode(): WorkspaceNode {\n        const workspace = this.workspaceService.workspace;\n        let name = workspace\n            ? new URI(workspace.uri).path.name\n            : 'untitled';\n        name += ' (Workspace)';\n        return WorkspaceNode.createRoot(name);\n    }\n\n    /**\n     * Move the given source file or directory to the given target directory.\n     */\n    async move(source: TreeNode, target: TreeNode): Promise<void> {\n        if (source.parent && WorkspaceRootNode.is(source)) {\n            // do not support moving a root folder\n            return;\n        }\n        await super.move(source, target);\n    }\n\n    /**\n     * Reveals node in the navigator by given file uri.\n     *\n     * @param uri uri to file which should be revealed in the navigator\n     * @returns file tree node if the file with given uri was revealed, undefined otherwise\n     */\n    async revealFile(uri: URI): Promise<TreeNode | undefined> {\n        if (!uri.path.isAbsolute) {\n            return undefined;\n        }\n        let node = this.getNodeClosestToRootByUri(uri);\n\n        // success stop condition\n        // we have to reach workspace root because expanded node could be inside collapsed one\n        if (WorkspaceRootNode.is(node)) {\n            if (ExpandableTreeNode.is(node)) {\n                if (!node.expanded) {\n                    node = await this.expandNode(node);\n                }\n                return node;\n            }\n            // shouldn't happen, root node is always directory, i.e. expandable\n            return undefined;\n        }\n\n        // fail stop condition\n        if (uri.path.isRoot) {\n            // file system root is reached but workspace root wasn't found, it means that\n            // given uri is not in workspace root folder or points to not existing file.\n            return undefined;\n        }\n\n        if (await this.revealFile(uri.parent)) {\n            if (node === undefined) {\n                // get node if it wasn't mounted into navigator tree before expansion\n                node = this.getNodeClosestToRootByUri(uri);\n            }\n            if (ExpandableTreeNode.is(node) && !node.expanded) {\n                node = await this.expandNode(node);\n            }\n            return node;\n        }\n        return undefined;\n    }\n\n    protected getNodeClosestToRootByUri(uri: URI): TreeNode | undefined {\n        const nodes = [...this.getNodesByUri(uri)];\n        return nodes.length > 0\n            ? nodes.reduce((node1, node2) => // return the node closest to the workspace root\n                node1.id.length >= node2.id.length ? node1 : node2\n            ) : undefined;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces } from 'inversify';\nimport { createPreferenceProxy, PreferenceProxy, PreferenceService, PreferenceContribution, PreferenceSchema } from '@theia/core/lib/browser';\n\nexport const FileNavigatorConfigSchema: PreferenceSchema = {\n    'type': 'object',\n    properties: {\n        'explorer.autoReveal': {\n            type: 'boolean',\n            description: 'Selects file under editing in the explorer.',\n            default: true\n        }\n    }\n};\n\nexport interface FileNavigatorConfiguration {\n    'explorer.autoReveal': boolean;\n}\n\nexport const FileNavigatorPreferences = Symbol('NavigatorPreferences');\nexport type FileNavigatorPreferences = PreferenceProxy<FileNavigatorConfiguration>;\n\nexport function createNavigatorPreferences(preferences: PreferenceService): FileNavigatorPreferences {\n    return createPreferenceProxy(preferences, FileNavigatorConfigSchema);\n}\n\nexport function bindFileNavigatorPreferences(bind: interfaces.Bind): void {\n    bind(FileNavigatorPreferences).toDynamicValue(ctx => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        return createNavigatorPreferences(preferences);\n    });\n    bind(PreferenceContribution).toConstantValue({ schema: FileNavigatorConfigSchema });\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport { FileTree, DirNode } from '@theia/filesystem/lib/browser';\nimport { FileStat } from '@theia/filesystem/lib/common';\nimport URI from '@theia/core/lib/common/uri';\nimport { TreeNode, CompositeTreeNode, SelectableTreeNode } from '@theia/core/lib/browser';\nimport { FileNavigatorFilter } from './navigator-filter';\n\n@injectable()\nexport class FileNavigatorTree extends FileTree {\n\n    @inject(FileNavigatorFilter) protected readonly filter: FileNavigatorFilter;\n\n    @postConstruct()\n    protected init(): void {\n        this.toDispose.push(this.filter.onFilterChanged(() => this.refresh()));\n    }\n\n    async resolveChildren(parent: CompositeTreeNode): Promise<TreeNode[]> {\n        if (WorkspaceNode.is(parent)) {\n            return parent.children;\n        }\n        return this.filter.filter(super.resolveChildren(parent));\n    }\n\n    protected toNodeId(uri: URI, parent: CompositeTreeNode): string {\n        const workspaceRootNode = WorkspaceRootNode.find(parent);\n        if (workspaceRootNode) {\n            return this.createId(workspaceRootNode, uri);\n        }\n        return super.toNodeId(uri, parent);\n    }\n    createId(root: WorkspaceRootNode, uri: URI): string {\n        const id = super.toNodeId(uri, root);\n        return id === root.id ? id : `${root.id}:${id}`;\n    }\n\n    async createWorkspaceRoot(rootFolder: FileStat, workspaceNode: WorkspaceNode): Promise<WorkspaceRootNode> {\n        const node = this.toNode(rootFolder, workspaceNode) as WorkspaceRootNode;\n        Object.assign(node, {\n            visible: workspaceNode.name !== WorkspaceNode.name,\n        });\n        return node;\n    }\n}\n\nexport interface WorkspaceNode extends CompositeTreeNode, SelectableTreeNode {\n    children: WorkspaceRootNode[];\n}\nexport namespace WorkspaceNode {\n    export const id = 'WorkspaceNodeId';\n    export const name = 'WorkspaceNode';\n\n    export function is(node: TreeNode | undefined): node is WorkspaceNode {\n        return CompositeTreeNode.is(node) && node.id === WorkspaceNode.id;\n    }\n\n    export function createRoot(multiRootName?: string): WorkspaceNode {\n        return {\n            id: WorkspaceNode.id,\n            name: multiRootName || WorkspaceNode.name,\n            parent: undefined,\n            children: [],\n            visible: false,\n            selected: false\n        };\n    }\n}\n\nexport interface WorkspaceRootNode extends DirNode {\n    parent: WorkspaceNode;\n}\nexport namespace WorkspaceRootNode {\n    export function is(node: Object | undefined): node is WorkspaceRootNode {\n        return DirNode.is(node) && WorkspaceNode.is(node.parent);\n    }\n\n    export function find(node: TreeNode | undefined): WorkspaceRootNode | undefined {\n        if (node) {\n            if (is(node)) {\n                return node;\n            }\n            return find(node.parent);\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport { Message } from '@phosphor/messaging';\nimport URI from '@theia/core/lib/common/uri';\nimport { CommandService, SelectionService } from '@theia/core/lib/common';\nimport { CommonCommands, CorePreferences, ViewContainerTitleOptions, Key } from '@theia/core/lib/browser';\nimport {\n    ContextMenuRenderer, ExpandableTreeNode,\n    TreeProps, TreeModel, TreeNode\n} from '@theia/core/lib/browser';\nimport { FileTreeWidget, FileNode, DirNode } from '@theia/filesystem/lib/browser';\nimport { WorkspaceService, WorkspaceCommands } from '@theia/workspace/lib/browser';\nimport { ApplicationShell } from '@theia/core/lib/browser/shell/application-shell';\nimport { WorkspaceNode, WorkspaceRootNode } from './navigator-tree';\nimport { FileNavigatorModel } from './navigator-model';\nimport { FileSystem } from '@theia/filesystem/lib/common/filesystem';\nimport { isOSX, environment } from '@theia/core';\nimport * as React from 'react';\nimport { NavigatorContextKeyService } from './navigator-context-key-service';\n\nexport const FILE_NAVIGATOR_ID = 'files';\nexport const EXPLORER_VIEW_CONTAINER_ID = 'explorer-view-container';\nexport const EXPLORER_VIEW_CONTAINER_TITLE_OPTIONS: ViewContainerTitleOptions = {\n    label: 'Explorer',\n    iconClass: 'navigator-tab-icon',\n    closeable: true\n};\n\nexport const LABEL = 'No folder opened';\nexport const CLASS = 'theia-Files';\n\n@injectable()\nexport class FileNavigatorWidget extends FileTreeWidget {\n\n    @inject(CorePreferences) protected readonly corePreferences: CorePreferences;\n\n    @inject(NavigatorContextKeyService)\n    protected readonly contextKeyService: NavigatorContextKeyService;\n\n    constructor(\n        @inject(TreeProps) readonly props: TreeProps,\n        @inject(FileNavigatorModel) readonly model: FileNavigatorModel,\n        @inject(ContextMenuRenderer) contextMenuRenderer: ContextMenuRenderer,\n        @inject(CommandService) protected readonly commandService: CommandService,\n        @inject(SelectionService) protected readonly selectionService: SelectionService,\n        @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService,\n        @inject(ApplicationShell) protected readonly shell: ApplicationShell,\n        @inject(FileSystem) protected readonly fileSystem: FileSystem\n    ) {\n        super(props, model, contextMenuRenderer);\n        this.id = FILE_NAVIGATOR_ID;\n        this.addClass(CLASS);\n    }\n\n    @postConstruct()\n    protected init(): void {\n        super.init();\n        this.updateSelectionContextKeys();\n        this.toDispose.pushAll([\n            this.model.onSelectionChanged(() =>\n                this.updateSelectionContextKeys()\n            ),\n            this.model.onExpansionChanged(node => {\n                if (node.expanded && node.children.length === 1) {\n                    const child = node.children[0];\n                    if (ExpandableTreeNode.is(child) && !child.expanded) {\n                        this.model.expandNode(child);\n                    }\n                }\n\n            })\n        ]);\n    }\n\n    protected doUpdateRows(): void {\n        super.doUpdateRows();\n        this.title.label = LABEL;\n        if (WorkspaceNode.is(this.model.root)) {\n            if (this.model.root.name === WorkspaceNode.name) {\n                const rootNode = this.model.root.children[0];\n                if (WorkspaceRootNode.is(rootNode)) {\n                    this.title.label = this.toNodeName(rootNode);\n                    this.title.caption = this.labelProvider.getLongName(rootNode.uri);\n                }\n            } else {\n                this.title.label = this.toNodeName(this.model.root);\n                this.title.caption = this.title.label;\n            }\n        } else {\n            this.title.caption = this.title.label;\n        }\n    }\n\n    protected enableDndOnMainPanel(): void {\n        const mainPanelNode = this.shell.mainPanel.node;\n        this.addEventListener(mainPanelNode, 'drop', async ({ dataTransfer }) => {\n            const treeNodes = dataTransfer && this.getSelectedTreeNodesFromData(dataTransfer) || [];\n            treeNodes.filter(FileNode.is).forEach(treeNode => this.commandService.executeCommand(CommonCommands.OPEN.id, treeNode.uri));\n        });\n        const handler = (e: DragEvent) => {\n            if (e.dataTransfer) {\n                e.dataTransfer.dropEffect = 'link';\n                e.preventDefault();\n            }\n        };\n        this.addEventListener(mainPanelNode, 'dragover', handler);\n        this.addEventListener(mainPanelNode, 'dragenter', handler);\n    }\n\n    protected getContainerTreeNode(): TreeNode | undefined {\n        const root = this.model.root;\n        if (this.workspaceService.isMultiRootWorkspaceOpened) {\n            return root;\n        }\n        if (WorkspaceNode.is(root)) {\n            return root.children[0];\n        }\n        return undefined;\n    }\n\n    protected deflateForStorage(node: TreeNode): object {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const copy = { ...node } as any;\n        if (copy.uri) {\n            copy.uri = copy.uri.toString();\n        }\n        return super.deflateForStorage(copy);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected inflateFromStorage(node: any, parent?: TreeNode): TreeNode {\n        if (node.uri) {\n            node.uri = new URI(node.uri);\n        }\n        return super.inflateFromStorage(node, parent);\n    }\n\n    protected renderTree(model: TreeModel): React.ReactNode {\n        return super.renderTree(model) || this.renderOpenWorkspaceDiv();\n    }\n\n    protected onAfterAttach(msg: Message): void {\n        super.onAfterAttach(msg);\n        this.addClipboardListener(this.node, 'copy', e => this.handleCopy(e));\n        this.addClipboardListener(this.node, 'paste', e => this.handlePaste(e));\n        this.enableDndOnMainPanel();\n    }\n\n    protected handleCopy(event: ClipboardEvent): void {\n        const uris = this.model.selectedFileStatNodes.map(node => node.uri.toString());\n        if (uris.length > 0 && event.clipboardData) {\n            event.clipboardData.setData('text/plain', uris.join('\\n'));\n            event.preventDefault();\n        }\n    }\n\n    protected handlePaste(event: ClipboardEvent): void {\n        if (event.clipboardData) {\n            const raw = event.clipboardData.getData('text/plain');\n            if (!raw) {\n                return;\n            }\n            for (const file of raw.split('\\n')) {\n                const uri = new URI(file);\n                if (this.model.copy(uri)) {\n                    event.preventDefault();\n                }\n            }\n        }\n    }\n\n    protected canOpenWorkspaceFileAndFolder: boolean = isOSX || !environment.electron.is();\n\n    protected readonly openWorkspace = () => this.doOpenWorkspace();\n    protected doOpenWorkspace(): void {\n        this.commandService.executeCommand(WorkspaceCommands.OPEN_WORKSPACE.id);\n    }\n\n    protected readonly openFolder = () => this.doOpenFolder();\n    protected doOpenFolder(): void {\n        this.commandService.executeCommand(WorkspaceCommands.OPEN_FOLDER.id);\n    }\n\n    protected readonly keyUpHandler = (e: React.KeyboardEvent) => {\n        if (Key.ENTER.keyCode === e.keyCode) {\n            (e.target as HTMLElement).click();\n        }\n    };\n    /**\n     * Instead of rendering the file resources from the workspace, we render a placeholder\n     * button when the workspace root is not yet set.\n     */\n    protected renderOpenWorkspaceDiv(): React.ReactNode {\n        let openButton;\n\n        if (this.canOpenWorkspaceFileAndFolder) {\n            openButton = <button className='theia-button open-workspace-button' title='Select a folder or a workspace-file to open as your workspace'\n                onClick={this.openWorkspace} onKeyUp={this.keyUpHandler}>\n                Open Workspace\n            </button>;\n        } else {\n            openButton = <button className='theia-button open-workspace-button' title='Select a folder as your workspace root' onClick={this.openFolder}\n                onKeyUp={this.keyUpHandler}>\n                Open Folder\n            </button>;\n        }\n\n        return <div className='theia-navigator-container'>\n            <div className='center'>You have not yet opened a workspace.</div>\n            <div className='open-workspace-button-container'>\n                {openButton}\n            </div>\n        </div>;\n    }\n\n    protected handleClickEvent(node: TreeNode | undefined, event: React.MouseEvent<HTMLElement>): void {\n        const modifierKeyCombined: boolean = isOSX ? (event.shiftKey || event.metaKey) : (event.shiftKey || event.ctrlKey);\n        if (!modifierKeyCombined && node && this.corePreferences['workbench.list.openMode'] === 'singleClick') {\n            this.model.previewNode(node);\n        }\n        super.handleClickEvent(node, event);\n    }\n\n    protected onAfterShow(msg: Message): void {\n        super.onAfterShow(msg);\n        this.contextKeyService.explorerViewletVisible.set(true);\n    }\n\n    protected onAfterHide(msg: Message): void {\n        super.onAfterHide(msg);\n        this.contextKeyService.explorerViewletVisible.set(false);\n    }\n\n    protected updateSelectionContextKeys(): void {\n        this.contextKeyService.explorerResourceIsFolder.set(DirNode.is(this.model.selectedNodes[0]));\n    }\n\n}\n"],"sourceRoot":""}